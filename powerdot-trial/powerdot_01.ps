%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: powerdot_01.dvi
%%CreationDate: Wed Aug  4 16:31:26 2021
%%Pages: 9
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMSS8 CMSSBX10 CMSS10 ZapfDingbats CMMI12 CMR8 CMR12
%%+ CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe -o powerdot_01.ps powerdot_01.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.08.04:2201
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 616 2017-10-04 16:14:42Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.27, 2017/09/18
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-ovl.pro 0 0
% $Id: pst-ovl.pro 859 2013-12-21 16:51:58Z herbert $
%
%% PostScript prologue for pst-ovl.tex.
%% Version 0.04, 2014/05/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/tx@ovlDict 10 dict def 
tx@ovlDict begin
%
/BeginOL { 
  dup -1 eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%
% END pst-ovl.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /landplus90 true store

/landplus90 true store

%%BeginPaperSize: a4 
a4
%%EndPaperSize
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD47EE10B9AECC871B76227228CA161EA7B61DABB252EF91E607AC8D3F85774
DF0B1507B60BF52E4E9BC0FD04400A548D553D4A6EDB247875E0A2E013685C51
D23EE8A56AF57025AD67D929CE8BE791BE91A4C4D9F00DB8B4F16252C04F7BC2
02236296A9052306639F4672E90E3B9DDE466EAC17E200523B2AECD6C05A0A83
66D4EBC86C0DF27B789D5597FE88BCDAD2925CFF60F5A8EA618FE867857D585A
CE25A158AED63B8FE391030C518693AEC75AC0AADD0C11B0065E2ABCF51132F3
82E3718B9A9FAAF727F2D8286177EE27BAD040C66D0D2D7C092B45D9330265B5
6B5C8E29F71C9EF548BFA4BAFAB242B26455E4B7FC1882D68E408D25E6F58EC3
03AE9B7A5F45D61E02D0AB82AFBE793D708ABEF45FEE865969895654C00A5FA2
093A297AE74BF625A96FD85F58FF994921C9F1276635C8CB65FECFEE37C77BD7
FBD692DBDF1079AD35F8A8198D63A3526ACB37FD5B1A169C2C259A224772F847
071A1688157E43164E168142F91DEBDDB2FE3DF3B0A54F2653C3D2270529F2CE
8AD8E6C86A29190E2BC5D68E6F0502056D04AB6DDA0433B61F70EE2846C338A0
DAF31F90A7D5BF51089FA542466614A879082B73389957709747183CD80A538E
EF180ADF3278F2E3286F32D44B8304893680F0D0B73309E68C9D6CA8DC4E49BB
6EFDFC2444BCCA91C6E46CD5333DAE7544EDCB1119F90B8136884BB69F60EA15
8B92E0C1A95EE80329398FEC2EB6D5B16907CE63CBFB2A9F553F3437F20F35A6
EA4DBD6DDCD9E2C9C130BB0D125FA5C6606381E2D07292B190D5D7AE940E1C47
26DA00DC9EBC20C37939F6320114ADB9B6F9A6666BDC7EAD5B2D06550931FDF8
3BD33FF79658764795A338E8BB81580D8E59887DC33BB806C7A1E691741C4C90
FD59AB5E5E57FE4A27B9F9FBCBD6F0900E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DF4743FAE6668B61F72C8700992755522AB11C765981A9BEE0D040039D
6C2D64ABED527082C97CA606127AF5C0C98647BF46AB8149F215BB0F1087E62E
740D8676CE8A486096DFA164A37E97EE630B2A16FF4BCF31B9A630D93C278ED7
6D6003D463C33B8AB5E8BFB9777F0B3D3243D650AC5641B91082A85801F907A1
54CDCD22CDDFA0F5E255F1F7E04A621013F0F3841D824897E67DFC2F5AE51C4D
36411D26424AA9702018C26AE65120CE396C9B001DBE259A3638455C3F4949F2
BB23F04E53097AC814F9DD04F0F26BE3F8C2118311C916D2FD21628BBC018A31
021BC222B518F904ABE96333EB8A033D13E80033452B2F7C8F400CE65F0EAB91
81EF6447CEE4BB024AC35075D24EF62ED3E393401BA04C01CA115E0231AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709006B68486B326967A28D
41E878EF9CDFFA015BFD11310CB2305640182A131B96D73348B7ED8D31A29D7F
2D889D8EC4F6C7A55DD179594ABED611CE4DE790CDDCB68CC677A362B879F4A7
F4F84113A561F6D170454B0DC4DB2F973E21176E5B00D0774F0BDB3F0E22D753
FDC635611AC85411D57FCE2CC85BB5DAE17BC41F3C1E5CA1BE272ECDEC1C574E
E68E33D269E90877555B1E9AF694D44B85295968D0CCDAC4B5EEFD6E6F284597
DC1016F2D7502E91FD71BA624C499BC62FE7B4734070F8C123A633E51596A0ED
00F273E0DD044A7DF055D633040BF5853FE171E3442C0A00DD938476920CF678
69A9DDF5A29AACE82231873F15E4EA92B37F9045EB711B4939EBC0785F347643
5792033AB924266D8734301BA52C5192F8B32AE780CC9D48C832833999E78819
CC4FEBEAAAD11210EA3D220AC1798A5781DFBE3E47C31D0B5A0B87147FFD44C2
0F4FEF9B7C06072E0398F740D8BBD3FB1B9920AE84C085461C1F5C08F4251173
001AC878E423340D008E73A1F49B6058DBD668C43C513C35AE8144FD672DF548
C439A883086F14F419820F312F3127097B59ECB9ED4D16EFFBCCFF0CF648981B
B0F888C510C0CB3C45918E92417F6CC39A8288A88398390816BB3FAC62D2051C
CCC0A389D730EAD6B05AD28D4311178DFBFE442372B08A31D416B78B71520456
64620D9D0A3FA3E8BA66A32F7839E4410B48557459EB0918274A879B02E0392E
5AF97B16F09D2B8A3B514BC1BB5467D359020C43A00570AAEBD3DBF637154F71
9A636A9700C081553E214361B2B57EDA19BBCCF098E1870D0846736F0649DCA8
FCCCB124E1FADDFAF3D5925CEF54EFE72CD0D2BDB735D18B4103C1DBDCD8EACB
15EA2822AC4D8AFF79F1746B14ACDB6FC83D45B9D3E972710DEF408694402960
947DA3B6BF54DA82FFEBC510725C300BA2FB19A603ECB41DC86E8ACD2DA44C5D
157E7B53ABA05461DA40B675F081053377364DEE80EF49C4B5909FE549B798B4
96C226DC16A18A9DE663612661F780459D9932AF482B5E2351E3BADBEFFD4B49
D5E120C8C3C96A3D38A88E5D4A9559465191677CFAF1B1BE5B9FD0D277D5AFB4
8E827DD0B979E7FA7FE01325199C2F208A02EE453F545DC69D66B1ED9262133F
9C47E58A0E5014E9C2670788FA0F0A5CB372B84435B4041597A8A5773046E924
6DB111C8DC2DF76A47C644BCF5AE4D4B413EB0AC2EC4684B0A43C27EEB591A20
FC3A54B30B97687A68132FE1D54AF1CF3B8106818B86D27EAC3EEBE036BF4834
ADA8515C4A4972910354AB20C935E0EA158B8AA75E645F5A8D84FB1C177AED50
2F9F054D68CB91DE636908DAEB2F796C0F267E8D7F4E2B82093323981CE48D06
BE4D1495247B1EC6571E5D15825D479AF0E6EDE3188F329E2CDA61D7589E2C45
A6B2402D0FC042A07E5EA2F5E4BC9CAA44ECE8FD86CA6D47F28C20CEB6AAE822
31873F15E4EA92B37F9045EB711B4939EBC56620BD253E4F8EBA8FA68830E6BD
9979FD51C83559413AE203A1EC23FC240D9E8CCB0619A3539824DF09EDA24176
DF46F0BD3A5958376B794F2043A295E208A7516AA18F35C7CC9A7C8D719E8FCE
2E4AF1F3B7462AAF1E8228092609828A232A2187CA1F9C67869C3CBB4205C9F5
DD453B1D3838591BD4A0179BDDE65249412DB809496CF89ABDF642D9E1914497
27385DBF12FB856B7017EA3D220AC1798A571AD1B27EDF2759A1A36F3AD7AE5C
AEE5116F406A101D38D244FC6FCEA0889BD675581B44E1B235AF2EB56594755B
CF623D5A9C8ACAE43716134C20FF7470501C0E31766C26D50DEF0CC9843F9FCE
EBDE2A6A5C73A6E6D54E2AAEAE9B51BC58A83896AFC8FC99CD926213A10E5A93
FF08C9520668D5551E1BF4F2AFD8131C11B189A473831EDE440FA50A873F63F8
EDF7D015F4E9609901307F14BDC0EDFDA1F05C2A4242869DDEE75801F573EB39
C5B9EE7BBDBBE18FAB9A4A6A550A868D0C17E52B7001EFA48A8465BD44A94B2B
1AE32702EEC7D41E74836FB073E689BBB3DB377EFDEA4DB613BBB739C2269302
9616BAF664E581944C5EF3FB616D461A0269537FE62F2A255F75426640589012
06193628C170CB14FD37D796350A31019ED9AD5F82955A69A8C4E216660AB14D
B7DE02A939B6B40F624FDF9258737C65E0A34F5D2BEA1C2F2DA36F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 49 /one put
dup 65 /A put
dup 69 /E put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291157F1886BF937B3D3B9B6DF0D0EAA38C7
D7F17D962490AF81157E76074422D746EBA97ECE803A205B482B03FB06D080D8
05CFE4868E62494AE445824BC127FB7367DD9F70B2168F2B8CA0CF190BB838C0
67563169C8454E5D0DA086467F1536F5E8A1E4D3E727B1688F745FFB4F9E56CE
4DF06341FC891C28C943B570A7A38C595E07707E41935285DFDCA777CE731DE6
B46EE9D1C3D61DB6EB8434F17B15274840BEB842587F3B9AED05B97988E18380
9095E88840F703E9BF997E8A666691909635B7CE630194962E4183C3838D9401
260A743CC9A7FC4713C309364EC95DE29F6D6E1FE8C348E25A878C7133EEA500
102E3952322F6337A44AC6070352D2594952A1234035388F5E4A9BA075B48F2B
BB86E2FB3FADE2F7F18B865A1C5CC0DA17E34F9F8127A8D020AF96CCD64AA150
21975B51C36C20699CDCE432A1D23E0D06FABE5E6A5857CFA0BDEF8BA575387D
D05713E900D24EED3EB6F78E4F33ABF098164CF9EB8BF565CFC666BA3CEE0E95
680F7F1D45DB7BE6083D043CDB11FC94D656674491DE923FC9518DF7632BFDA0
A4DAC74CC7B75CB1B957DB7AFA3D04BD75E6DE29725C2BDF5DD8BB1B909F926C
F902A4B78D0DA6ED287D87F2E96679344ADE9AB7CE20C5AE649FD0A0C09F19E9
1C5EBA81604433373AFB154ADEE5BE8D422D61D855ED166B8065FA2848C6F01A
4F6658CC54C4E72A7AA3333251536F20EC0A8B62BD79530BFEF9DDD363C853B8
65FD104045B33AE138CFAEBD6A8BC5487BEA5CE1E88B106927430D5A65485EA2
4338B597024597270497C44D0C5D344243F2253DC2005FDBE57686A79CE81F07
0F77EBE9DE225B5E861B612CDD5CBC53F93BE37122E09ACE817AAFFEA2D8E036
203372249B15E33497F69B5B8956A1697155838C3F597D3ED953E22CBEC157D3
3F83E9F5C1CE8162FAC3DD1F4C701594EF83D54469A0E4E34C00B7E560608738
1AF245C49D787A8F6CDCC9471F7E0197925F07C4E21B0E4BBCDF33D3036EEB24
7C1872952ECD81579BB9D717F7E048B3282C135B5FEBF5D7A804ACB07037E846
A82289743936EF35918ECE964873AD6D8D531B06099A5D0E0D5C8273D5457A39
52AFDC0F29C868E76AFCC901E1664312804440DCC0C9E296A46D73EB1B048111
6FCC096ED097E945C9369ACEEC1873484EF60C2F37706B378FE86691BB126E15
BF1B76F20A5EA3D5CADE6BCCC4DEDFE58AC7874947C2CBA6FB69211CB041F770
9F7CC7CFB21855D8EAD74E66FE0AA23701DA2A90252789DD5065FB475A3D9432
B897D8AAE708196E122D694E681FEA7126D9D803286A0C4DA822F12A8CD2F139
4A26AC53D477A2B49758E02119741826EDDA7053ACFD82CA6C054C2E9C3254A9
52AAF42C631F7C81A33B411E75041434A7A512DCF30099B0B296707B052C82E4
0C3EF1E719165978CFD0BF46D27A9C81DAD7535552445416904A46476DA2CDA1
C0B896132D3B71E0545AFC02A5AD59A63D2B738E968203847B3CFA6CDA76AEBC
B2B25884623036EF1814A61D62CB0647885ED10863313F2EB744C3E73D710B76
5D44645A1B37C4C50235AB2199C6E98429D2BBC29159B481D04EA847FA43305C
0316F6B88A82F3433ABAB31E77ABB834DF47D58494F36E0951FEA566FF245727
8C58680A0CBB7298624F16E55A2B95B95BA8B7C09C2BF0413EF34D53B84C59A7
4481FBEEF7E29B6CF46764CBFE42F3532BD9BE05234ED9006CF0AC90C02796B1
2E8E4D5054ACD914B2FCE0B104B02C05636E583287A3D2D9725C1F7B03602718
8C12AF59030E11D2837A727147027468A7D4AB0B4DC63563FE38626AE04291AB
47D4A5DC2E86DDC06703424AD98B7917585FB39FCCFB0257DF23C2FA04CE4864
CCA4437E3D78471FF0FF55F77959D5919815A93242CF98E251A191609D85DFE5
7198D9E32C49E1159083C6E9D422608523C155C3C60814E0C19D972A9A73C2C7
94455F02FA68CBC289A803C4FD33DDDB731CD04049822C95B3C277AA5A8A0726
D039A0E96FD73F89AD3971B47DF439558CB58775692920C651381AA08A346CDE
8864492A766BC0B9CF4C9AE6A90013C080C1F880DCF30355CEB34C9263199195
7659F90AAD07AEE0E7102A5DD1CBB1D6276B9A9A199938DC0D84C87882DE3E83
E2A3FA1F83209FA16F103F520309E877B49DDD9BA7A66AADE1607E03069F55F2
3F73CCC131972A5B68C5D72F45FA4172C0FA1FF92C2B5222EB47952B52B09860
B97851E7BD766FDC8C8EC00C8BD6EB20ABC7BF0FBE9B6FF80D68D27CCF8D8B89
CAFB2C9E4DFC326F022087B99F67A68EEEEA836E270C8167980EF30820FD3275
7679BEC29A46954DB4E8021945225363AB2320F69715184FEF5A62D29D25D615
1EAE39E69843012C1C7C1FC2B00ABA2960075E5EE0079B4B4E5C90219A584853
D07D74EE69CA98BE913EF2E023E717343DE6A30DD8C547360AA95D22BF7569FB
6314A10512D509C2306A4A8DFC47E44FAEE28467DA6A62388709ED0E44AE5029
69EAB8029DA2C06BCD05C47BCC587925C90A0A7A33D692D2674446EC2997A298
A58EC096E88F7F96CDE037B6B38E07F376CE22C58011DD0F879B8E69B26B0CE1
0053609E4AE9A97F454F6D7F3CBF0FE272EA5A70862F8857653EC508A29F2CC0
316FE6EA4ED3D36D1F613E1127E5AC48898AFC3866B38342C074E8860035B60B
1768C4E993CE1850ED554EE451290A3AA23B5FB11F96EEA8F05B7C35330AE160
19853E81F3F00EDA87239BDCDB82F0F4DCC865B3F0F24803794D3A0A0D049A54
E0E770708472315E25C7B0CA8F1C75C2F18BF9A28D58020844830A894F444965
3C791E0632ADF8567ADA3E30700D24E27BBAFA568680AC7454AA91218F7EC30A
DC9535CD9645790DD11C5A93E5B668DE456FFE588C087BBD0ADAF542016F82B4
E4A117838569065166D8952276B9DB371CE9341B2111706606CA3D7287B5E70D
722632D9742E087234B4095709B3383A324DB11476F28E97D4833D9311B954D6
8B22244B69D0BC63BC23BB480B174D7E13E4B477A81426BE05B54741FC734900
E29B5B28C97C653BC83A6B669B7C5CA336660BC035EF01B9D4D06F2C01DF9332
40C6C7EE6BF24FA3700112917440DAAFAFCDB5C359E5EE5C12A40F947A96BCDC
6D92198393C0AA589E4BAFCE9C963C3AA1DF4260EBA3796B48ADC57E8EE4EF7F
2450F6B9171860556F3064A3CF30A1FA45C5ACE832FEFBA16DFD23B47695A512
9C4958FED85975342B17B013368F860417071C00D725AF5FCFB1C60E8C0F60BE
1C2EFE74B9CD3827E44DFCE6ADDAF86D952ACC873728488C3100C1F18D3ADE26
FDD8F52D3A451CD521445E63E85C816000AC883733DEF248DBBCAF701173F76C
D4E953098BB4ED4254861FCC40930E6A1D9657E7EA15C22A5E5FA3186AFEF630
863B7E3E5C75A2192E01E806A59FD43C4EE67987B33418E42C36C410716F6468
D98D022614BB9CAF340BEAAE3769E16C8F32028A93BD803E887745B0E3D65C29
E9FA4BB87DB702B3AD768789A28430C7559890910D11A3B80FDA5F6E0909D8AC
0EAD0A3E8F188560EFBA838598F581D2EA4937F12B4EC40EC00C947C89F6CEFD
6B55C14F853A19AFE69C88F9A7C53A82A2B0198CD485DB17C4EE0EE1C32F1378
079C298C53CFBFFBAF8919B3CE08CA5F7681FA8BE7C7DB668885C289AA315858
6582FAAA88B1A9CE853D435B5ED7D91574B175D680889F0963DDE61BCA325A76
EDF30A96577C25195A1AF840F38286432FDF7A9FFF5E50EB5B11BDD68FE0F23B
6E612807464D52C7B499BF9AA456D0F76A32CDF9B52E2F66FF7E71F60D6B68BE
E1035E5E763492312C55290C1D7862E5943E84F366A7C4100539AA2B2C21C476
2294866500E629940ED88B767F12BFCAB59A99EDE81985E83FBF87D95D22035A
65546EFFD7F91406454879E9DC36FA9970EAB8C16C9AC24574146A7122D387ED
3B8D88AE356DC744E872F10DA17606009839613D2307EA0976173AEDB1755A03
41E29A2BB54E90D53F7310732FD4516C5BB053B538EDE28A158CE5DF34017999
4A0BAE9FEC2F3F25C41FF4411B48B397AAA4E123CE71A8CC9E1EB55210B4E363
1518D0180D1E9125EF2D4F86AF668ABEE8DAD3C6038153450ACA2C17F6F1910C
B1FC3C0EFEE0EEF0F78FA222F669D5B49E3A9ACB69394047987D17D7BE92DD7D
DE8ECB7125DE1B520D2132EAF983EC74C0E5BD219D8344535AA5B088C46EAD6E
1617CBB94C514166D7D5B71E928C67B550C504DC7FB0BC0EB50ECEFD2CB4F1C5
85EEE1E8C2B5AE7F2B8185A548D86357222EEC16B40FFDDF5A9CD6B8888CDA9D
E1180C5C7A1CBF3CA28C797BD2E3D43343B727035DF73175A731A5E011E6FF12
A27046966D79EA5BD0289D6EA8B11A9AD8FD084E75AD2666506BA7D301E5E2FF
95F057D4D0268A732DB57354C3C890FE18D91F5AAB2E85C317250A368CF6F160
0910DB06606BED8EF746928587C45A2521F3C1AC6E3A66F2625B81B9CDCBE566
D69B83F275F7FF39F528483A30D565D078FF2FA7C9B370DDCBBB5AB7B7DF110F
4F87EF35D95F0099CB82A119B76914D1CFF14A4BD39C9EC076FA7303BBE93C03
3679D0241EACD34F9F57015578F9F72252AF2D5D1C6A5CAB24741AC9F82F5F3E
985658E3153AAA42081E7D46A3670EB7A8E03CD3D9D942E88B48EAB7CBD0032E
35402E0C61180205E16304F8FB53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS8
%!PS-AdobeFont-1.0: CMSS8 003.002
%%Title: CMSS8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS8 known{/CMSS8 findfont dup/UniqueID known{dup
/UniqueID get 5000801 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS8 def
/FontBBox {-65 -250 1062 761 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS8.) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 83 /S put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C6258F0D99DCD775
734480114DD0CD2931DC18782C4CCB90B6906CE08BF4CAEC2D4283CD44730A2C
28919598227F98FC5524B0CC92540E349C5B190DF5F2317AE46FFB97221BDFA5
114C21D5E8FB0D1C298EDFF8836AD72A9B2AA132F52DD5D3F30427563C97CC46
D241B7024B4CD9F1E0037FFABCC88D8CCFDF3BC6EED778074F9590733CD147B2
5B68387E0F19E6A81961077BB7640A3C0E27ADD72556CF84ECD981ECCB64184C
EAB8BD9B96A873D80E3E0D5B4F5925983C80EBC3A8A12FBC452582A0B37D3C42
4DFD22E9BADDCD2E69644AA271EECF366D63FCC29522FD72D6C1EFDB3597E866
61443179872395E99024F152F6D6A4FD71BF1C7383BC1CC27AFD2DE3DAEFC06B
6BA837BBEBD0BE09F6AEA31A83B1B45255DFD6FF33362AF8BCABEBB0D944B3FA
B85FFBA0B370B9035460905432EE87395E518B4B670246FAFD535774467C059F
DC30EA01C95EFBA4ABB41711818E23D7E69D32BD63243A6D98666BD46E234155
BD6ABC76F551C31B6CE2E52323A9DAD5C003FB116AC8A82B46ACFC45EECCCAA9
E12C2C8E3CEEFD98D49ECFB824E8677BC9CE9B682BB5A7117174E4B2A0B925EE
553713780CDF3A3A4AF1560343A8A448C0B5DCC4E11EDF5ACBBA0BA8E5B899A3
7321AA7D4B283AC9234978C2DD81813653A96F2BD129FA5F355D56C4E50310D2
0FAA8F304D8BF333F97A6CD20CA4BA7BE6DC1446759683933BB1F1617AEAD131
1C9EF2212EE7EA9B64E5ABFF45E1727EE82C00FD371BE1387987236F9BDBA4ED
A966658ADF028B5DAD1F0878064221D0469BF17CB4E738258FB5D92E9D380C64
16E95BBA6A2BD9EEB1A187A7231C53BD8ABC9BAC46CA4AFA94A4920FA805F67A
A0C61940F6826CC4539A6CD1F9900EDC3F720AE4FA097F1D7510746BCE2E67B6
EA2F2046613785AAB89915655408AC9D03201838BBA44F421D5F25CFD88E56E8
1CA23CBEE9C2E323DF1866D31F309C92281E514A87A9631F33B238AC6520A20A
346DD6A206C3CAF2830FE244F2AC5D894686CAD5F4BD1CC51EC0B547603BFFC4
F008FDAEBC93542A43B7C907CC85046313348CC8A017C585CC370604E40AC820
8B9D8F57A01868FDC93551DE10FA83DDA3E49E44C32118ED90FA67AB1C66B3F9
F80CF71131977ACCF4DB44CF1EC26AB363C5F95FC2523B5DFBF4D60647EB23AC
89CB971DCDAB3BA26846BA9317C051011C37468B21B159412E69DCB84A9F5876
F418908678F38880B95A4BFD3566A6EDE93AE05BBDCB3C4E240A5C0A06301896
69FCCC0B65BB269F2E10609B6446A68E2DECA905FC26D4F502CAF0EE9AB15E60
CF42CEB376D92D80A6AEE55BCAB006999BF4415815D0F5BA3B1FF9D2E60201B5
833FABE8B883847ADACF9B032721DEEE7FEBB583B89066ED9608F1EFBCDD09D4
3F3C2B7B03154676151753DFF53815F2EC1517C094B0D2CC5EC483AA93772D24
AD3B0084537B91BE1913A31C70750C6DD707761DD733F9ECA552D3F26825B2B8
3EA263488892C929DEC07E2F988B7F7657D53CFA5542CE336D35B462E5E8649E
05973AA54C0A4E63552004E3C77E5FA77F821D820B1620CC8CB3EC5B1D7BA751
16CC155DEDD4DB0FFD3009729F365670DF9472435557201D8E82341B4056D2FC
5D2F7C57599249DA2A99A522868716B076320350FA7415C3B10D77A6E1DC77EE
2D929A038DE3EB4735A4D4F5C8C340D6D293D57E83C2F379ED0EEB16AA3A2A2C
ECD664E526D918A3D0A934170B6E1493843E6AAE87E850D70DE65D34AA2A36DE
8687D57A6B6B1447F9A4380CC3D4D11D54CBE762258426C46B8DE6059E6A2F31
E748549310FF4362129080CD98E70817A06422743780B86E11101BED14BB6569
D36903BA8BEBC24A478CD430801082CCF49382D6F04DE270D51CA5BAFEBD0F8D
901CDBCF10DB97E2B059C8CF7CDB45BF931203D5F8CA4622DF19682DE2BA7924
47F78908BDA23C4E21C0ACD2DA259B23648B6F233EEE830E7B82DF4371F55C30
71993EC2BCC7BD6411690B9B1621903F358450976D6B6EC6B505A593A9FB7D92
7223E2424DD5AABEFF254FBCEF934A4D51949BA0E8CD614AAA3AE6C3ED7B37BF
5324BD4998D8D5DA95E4741B753AEE580FB3913770C00277C9F609B4DF3D618F
148E0EC7A75218AD788F98D35989F3DB94413E70955EF586C0995A450BC75820
F5490EB55E5D0D21343565E1FA94FA64A74377F87E55EE0EDDC8F4286951A4EC
ED6FB3B444206D89BA71A9723E41E93A9F6C80240437019F3C23DFC2491A19D5
29762876AC60A14404493D04B5537C1E6FCA67B69DC1CD859F9C956FECF4461E
EC8B6CD5B5A89A8A838660A6C3F47B79ACE3B05C0AA2F17CF2DA947B893B42FF
749E2CD5E7B56823A119629931B1ECF65C51000A10412668877178F589B4DBCD
24D39F9219C46BDDD6F101C6AECFD3876056CBB858FE0C4BA2BD0B5FC26AD5BC
7FA9E295E72BEEEC721300567B6894FC48FFE5E3067C538CBB3B77E386F50D22
F8DCFDD0E335060CDFA49231D157981925F1CB36110809C12BA28D2D116116DE
01898E311FAACEE0E5402CA30B64D3D5A0CA33E417FC322F2F0BB7AD3FEE2039
56A15DD6D1E86971AD3A5A9A27F33AB62A5A3BF5660B59235398926D6BDA33BA
BC43B062EEF199E4ED991518A62AC374EE21E8F1E1C954BA6D1493388F708D0C
961612444BAE019E1DC18BDE900BD7A781835580A74DC696BC512F7BBDBA2D0C
ECE5D83A049F7A3286B94FC446DB5C3F33CA2CD3DDE2D0E774A579831CFDAC37
9612858EA613AE6939CED001EE662DB17642D0357B80BA0F82ED306218DA8505
A613CD622FA998EBCDFB7BC70F4E4C8F1F43241FC22FC5BB208F4B20311A98B2
73F30E4DFCEC93875CBD1ABD29ACF80585F59947F23A96D218C0CB8BDC1C49F5
70DF3D49704CBA9A23294A88A2AD61811450921B1E5C3C86435C55AF87AAF6A3
A13709082DA9C47D372A4226116342DECB14E4A4ADB7598321516DD637B64148
12AB17AC5B2EB25718856D50BFC8D64C78DA6E5C145187DB0325C30A42013A81
590E58E74094610207FC70BBF1A497395939B42A6EFCFABFD9D43221DE484753
DFE5311F1845592B4484B1CDFCC32B4E068B11A82BA189D2268D88FE63B9C6E9
20C9E40B543B5C401265D92A932476DAEADD4D3E2BD6E4DBEC0B30FA90A1924B
41D2EE9D8AF2D8CA79D15518141665B542C696C2507DD2F4D987EE5E22397FA8
FD80743186872DD67BE58103321467CF3F4B8898E66584DBB9688B9C78873CA2
9B72AD7406CDFE8B58FACA2904869FB0EF126DE299CAC08CB89F60561939D75C
2722CA57853372C14F5BCCA5C4FEBCEB0728BF9E30140E6B0D6C034195FCCC89
291CD818CF66757EAEB0AB5A9D5710988EBB052850DDE97BA0DC0B054BDF5172
2002AD6FFA44AA5D9D4EBDB6B2C04E8EF38660D9BC4C995BF37DE078C279328F
4C360B8EB337D798962CACBBDEA517A5EDFAADF0D445FBD1099837F9D689CD2C
E330CF587246387EDDED64A2F4C397C1B2BFC325B39114609EF57DDCD7B93C53
811ADEFA323C59441ABC447F683B5EC43870C057463DD502E9B9DA7084C3BBFB
2FB864D26DF1BA41ACC815F2A71E96D2C6F572E1F7E4A224FE57CD605682F98B
AC7BDE4B85A4C11D58981E981E9FC43B87A368BAEF78AD87B7DA0FE403AABFD1
CF414CBE75C0E9E257DADCBA035E1BF05C4E17FE92309F18633D93DF885956A9
6C27E77540F888B8336B61598CAB04F3B5A1767C1ACFE15D32A25E5B1BF51FFB
CF3CFB25CEE7DC95203CC44805A935D5A9154A89FBD4E465F0E599EED4033365
0A31612F37BDAE8CC85BBC67F7E375EA68C2982FFD89284B027501184C4D2232
CE0FE4E905C4B504EAD009F047FE627C79AF9EEDD65D00A3858F88E699E5EB45
4957086CB22776AD06C317DEA41880D88F0EDCF71B4ED76BEE665B7937D5D0F0
E568C7615025172086BDBD69670EA154CC52C85CBFFE88C1A4D1AFB6624EE667
1B5BE2A31FCE8B2A4B03BC5DC57280199CC0970EBB636DDF8DF54C4A8CC8805C
AD63CE866FB20C64725AE4BC9F0EB275BD83EC89F2F9CE23A084B45694D8C3E9
3F3D3C1A678690877E8B1B77ED85D4F6E03DBF1F3B1D177E330475F172E0E729
63EAD8034E6100B2A5773E2605180629972DE6BAC0A8C2F9580E9F1D2E77791F
E1D33C2DBED3FAC47DDF1B74FD02583C3CFDBB2D1CC2B735C02B14B7AD3733CA
1682944ECFAD673A9AD5E80B6248FBB6E5036EA7FE5CA8C34FBCA6DBD0E76EB6
C2CB89D9815DB3C45742170DA926E03493AD86BB19A1D3FC623BDF1C920684FB
7414EF69CF39713A9495D8CB678BD4592B53C36BC6CF93505B8E32311D42532B
5661051B855F01A9B3D77AE38879853AF0FFE2448368DDFA3EF1DEB88AA055B7
91459586DD2DFEDA192306DF7143F998CC5D67C1CED313430E5CC3F9CE265747
8582102111E7AF9FB94D95B82D8E1DF01F04F2A2C22A20207B59C8976D56833F
E3B79DCB727EE7537476A052E92F7C3D6A625AAED8F026F22AB59EC0F86E541F
BC082D8E35234A18192862EFD232C9950B1FE0BCB91209FB540DC5729B9E36B9
94D0913A8F01FB6CB16DE85E6B89F144111B1D911DC527C24917D909F1CF501C
1AF2923EF71530F21F9BF049A56C7AB3249A420C28954E981EC464F61FA167A5
C6084661808089EE7DBD80A2D92FF4040B37B2D81A2F5A568D461BE1C62B0FD1
BF6D1063D2B5DB9CD48BB2B2AC9CEFA543E0AC5C86C462399C1E82F25A157282
D32D538029ED22CC5935E63FA076BE22D3F53B7D7CCDD344D68B4E73F87A5F2C
691FE68C981FF7CCFB124506FEF93F36F7181075D7BC6FEEC0E35AF57855BAB2
44AF021C7AD8912D884424E8BAEC68A5562B881793A1B47FD338B1EE4C0B8583
2867C78DBC2EFC8BA1431DB1C8622C99BB2C2D4D5475BFCE87B11762427867B5
7253463C6F2E1CF5F1DC1F7851F2EF6A957CAB0C0A55076C59A6FF9237917C08
5F97C2CB4B5CC903B76BE8C057018CD962EF90E1C0CCEECD52F2AE35A94C6EF2
D99DF4DA88247C920623978A1DBB81D8F171B588D617AFA8285F6147E889523F
CF11EF4BE498842D3BF8E811B4B33131416658E03293AD911516D8AED556F7E8
0181391AF36D862F5F8B4588BC99585BFF0F1ADE4BF73320158DBACB2784768D
D9794E2B0F2C0696E5ECE5C7A7DE78EB5CAE85EEA244D43D0280D4C87B6B93F4
803718596FBCDB61A0BFC2DC666128E56F3133B9D4F16305940B50ECF66D80BA
06C0A73C02F689314F1B4FAC22D16BB1E414C6F0A1A548AAB1364D2CD9DDFE5E
C8887964D26BE84986A6B1246BC306E6343CA376F990B77BE8D68A4E54304C3F
250B2311586A1D1EAD2C0221FE1828CE8396DEDEF13E70E0AA75FFB6089DBA9E
9FC3FAB43B3633C8EE7598619A0C6FAE2F25274787348E3660D0EB7212F5CB38
032A41A54FDF14B32E721819AEEC54E8FDE3AB8F0ACEA267B01081F284B008C0
5861CEB5C236729AA17DC78E92FE1EF9F047B53A59F2D1D6A6734D0413D1A51F
75B03234F4775523A55978C73D5BF9031EE8BC6BF9E2637DAC07F5AAF2A6C41F
77620B272300A78E86F71F16EBCE2DBFEF4920BD3F16C282E0BA4C872E5F7E52
7ED2B663FE45D4A36A588D228D32E2861F26AA6FA8DDBC8110F4417D0DF29285
F06B57B1720D0D13828A4DD68D57BD530FEB9C3CF305594B70E4394BD60C82DE
A64EC17661977B18199BA661C48860919CBEB56AB6C32848D51733F1E959EA35
DFFD823D92F11065C643AA69776F71163A60D4941B753BBB4A4C0C47BB1D965D
06C9BA1FDAE47926F37C0C5B591058F68FC1DF3933B2BE014F99A53A617A19CD
8BE011234D48CB7E14D31B02B1FC47C8BFBF04C4409D32CB454E8FA0EF9AF16B
8AFE9FDDC41F6A23D700D4AA922A0316A895D240C5595F21FEBA98FE0E74B762
77FCC80F4950A8C55B4A008FD381E9C0EDF4427CB324BE4ABFC790CEB53E8BBE
AA90163A7BB19E2840FDA404E830F5478DD69B85C5E69573D8CDBBDFF41A8126
24A6AB66333C749C35BE314777CC222D54FF2C4C75717FB938724EEDDFC2EC1A
8DA77B5482E760B68F0A2D240332BD48803004BC157C6E8E192D512CE83D5572
D388BAE80AAF5E7240A73CDA7CFF7F8CDAA4ABE1D3BF6ECC3641B6BD1C2CC703
275D48D62A15E5A85F003E76D1EA7DB65E3476CCCF6B504514AEB1FF1263FDB9
81FBF1A1873FC287FC6B6DB11F0FB463637D4F3280EBD19976588F900B956FB4
36AAA8C1F040300CAB9C4F624B22C1D3D6414B7CAD36B5AEEC90105B5A5C2129
4CD540B9D0129813BE7E20870365F8C46FEC92DDB64D0A6C7C5B9867A4592B7C
124B1B47899CE2D1C03811AD1B8BA253B0D29DAF2B53E312827478DBA274010F
C919D122DF24C1E372F7F3CA77A2C0EDCDB2635F4136EA0C202D4011346902E5
1524609DC031656660302CA36D376245A64135890C13A11C0085861792384787
D0831FA01C11F1E7B4429DDAA0B3A7EC1DC3CFEA24C34DA4BC993300F12A953E
80C8BDA360789FCB0F1AEEA7AAC310D0C3C56F43F7914C3B037DA02C31EB740F
2B1A696E0E5553656942BA567DC9C4D3CA06E45EA615B7B5674016DCFA07C0B4
285BFD9D551117A357F4BEFD58BCE60661187A5FF20D27D685B24BEEF563F0C2
B2CFA2565112F7F49023CDD405AF3E54FF994630BE678B0D6E1CED514FC93F7F
63710D289026CEE4B074253E7E0AB1DCCAB57DA7A1E2050D2B8D3D75F2AD7423
0B0A7081DB1FA44055620B0A2CAA54666C5EEE3C01540D96ACAAE98644E1D210
E0E020214550D723431813C031DC7DF0D177E82AE49798F8E0E5AE0BB8FF664E
4793F857BA380297AFB977065B7500E4C0AA1735AF4E15703C860A016F19E593
319D14C497F24ED8E42F3FFEBE976DF33D697656DC11A8A7C6A60219BF63F186
E0FFE55594B31E5C312DBCCA08E84E94E8BF57CD5F5B70EBE59F0D41DD3F6B05
F7635EA92FA9E082C80075A5A5F684160AADAD501BBFA7746327E3E606D1FAC8
EF7AE7C612371BB52FFF41A97A349D111E861A83C9C48B0145ABC3582FCE43C5
D121F0EB6F5D219E52E2BB660AA1DA5551D6B66A732628D640BF9D8BDE2BB3BA
046FBFE2E28DB31AEA2ED8F9405A39C16C3800E9B5611B460BE0F6716F2BF79C
902AD4FA3B6656E13E9DD7A785C17F28BD4D646D66058721610CD756E0D18D32
F09C740B6023DFAD45A718BBFB2E65544D4754A5DB23CC7988A3EF45CD3786F9
E100D9684549A16BC2DB736D43C293097E082A968C27F0C120C41A53E3464381
F7DCFA8B36344EDA85F53FF65BCDACCDE7EAA41A6D38C1F420F8F2E287AB0F98
A0DF7D8A6CF2E4C78D606569BFB7C51495493FACED57CF2D507DDD366247D807
28D73CBBDE2F4F666099411B1FD2CF7B93D0E9AA161024C58892285BCAA65E55
9FB37468777706D2C57A0DF6D520844B56D62CD10F2D7B02D17F97E4F87C16F3
9BA09013FBD7ED8C2DBBB432288E598241369B9DA6E3EE324290D73BDBFB5448
E9D7142036C0FE538F18E866A50DD23152E2C096E1045E7777888AF5CEFB83B1
C6FCA18A26E83D75AB66291A5A5A285DBB1B9525919564600D71A767BB03A8BC
7BF24CC3B318BBC0F40C79835DE62366A937B938AD46D69C26DD0B38A2B21A60
104698E9BC23BDC80D270FAF3C4DFF677E60CFD7F9AFB62B4BC36E171C079402
E2BD9735E69C47AB8322FB722E8DBA6CDEA87DF40A827AB2618F74F1C441DFC5
171FA17A96860BDD648B85699CC06CC8F3C38638084F8F4F7DA8B4AEEED92199
14290A07373ACE6F9ED34CF5FD1C81292D7ECE91DB3F7B7E87BD9D405F2E29BF
660674457A70FD024FB9194EB0FD85A1955EF983606F5D58FB6BFB03A0FD7DCC
0F4E58304AAC2D9AD27F8A67E78A4A413A276F5D3160BB73DB27646EA4213C00
A70E288F036EA3BD1FB35B49B9AE0C2465A0565E91E89D2FD72C7802C1F4AB38
1D4A8DA1D0AEE7CAD19D325B92D4A4D63EC9131ADB2503521B69B90ECD48D44A
2F6F59FC689CBA73699AD4804910ED7B65C50060C35C72743413D41A56566E51
11ED7DCD009BB3E463612661F780459D9932AF482B5E2351E3BADBEFFF2F2A42
C02E3D1C41FD46552E7CA1B36B02C66505D76B0FCEBF315BCBC1B4C0737EBB62
3F79B3C763CEF76DC1A456DAD044021E04D419C671C0EB19A35AF14BAF80F267
D03B570897C7A52CD607D7584656F3B1BB08D4200991466FCEB625B68F73B0C3
6B9F5DE721328D1D198AB7060BD977B70AD89F15168D1CD6D03C0C8CDCA688D7
4BF0889D40A68EA880468889080FB68E1848E45F2CF3C4A79EA95D9B9F91D03D
D23D1DCD880E4FEE180602870101F93FDA8957D09E627D5CC7B9F33F9DE97A24
F04793A77BE77F5C2647FF1198340B3725824BCDBAE483DEE7352216B85F7D5F
2417279D6F1779B99113442AE0CC02AF9D4A067DBC4A975E5E2A1303E1863DA5
FCC7F867284912F5B4FB62DDDF4BC5562355D1795D8817E383891E26DE29EE8E
26666A4BE143C2B3EB6510AF9C6AF32576E20579A4FBAAAAD8CD9EE0E5940D3B
CBAB4AEA5E32C8A0A2F73DF858B6CD1E3A74C56C2C3FD1C40F816218ED690869
9328803632A426B77125DE735608726EF39CBE05306763DDDC30AC317314210F
9F45EC88A0604243606E3E6DFBED1B291D82F767AA3EC2A2ACD57059ECCF76F8
BB7BD977115FF671311C7D3D928D85B6980E1544F5EA83E5B3004D7C35A613A6
32DE3F109C00DE8ACC4D31BBC3C5C605F9958BB44EDA47FCB7717729E9537D74
1A663B546551677764AB27F64A39CC2EAFF55DD9C02C127ABA237C8816B2B30D
346045A812A5C8543715CE4539F97192F2BF0A7556817C500686469BD0E63D61
95DFB5E59CE752CEA474272AEBA630198475664415109755B1D85391DB829077
A328CFC94E4139407CE7A89EBFDD1DB94102FB88F631833D3E1B447D163C575B
FB3F2938542599A9C173CDAF700380C54196BEB4C2252D28914A1102365BC0D3
42258F783024B52A7FD106C943B1432016ECABCD0626AB28D6FBEE4D30555E67
5D2325490AE22119EAAD6962C317C1306DF2855047F1C6E51E11FFDE54C554A4
6FAF0FAE8A6795AFAD7E086BBC8F7F1ED7DA97925C5B9D235BB23F0A54B2DE80
2DBDF7195FF5E94C13C836B759D91B253B89E35B19256342E967BAD943370FC0
5A03C7CEC0DD7C0E071D8B8716D3A4968CDDFA2D1C20C6A36C3DEBB1702018C2
76E7792B57EE11F092C8FBEC376183653F7668D788C274CC0256B480FBCD9EEC
BF86C5E43E207749230829DFEE9ECC1F0B48ED6CF1A7B9E67AFB873440178424
13A66DF9E2DCF12DEFB3CB00D72BC2ECAB95BBC86274770317C0B42F24B2192A
4EE73CB4CA43ADB92EC0D6A65FD8188AE32E323209C7962500535F57F6EB828A
FAAAA6474B038E2535DF3B2CAAEA7D374E8AE879B2FF35E33FED1B6CCF265048
A748D61C4BCD213A38C04747BD170A1AD6E216796678F265714198F887DB7920
CC4BE7CBDDD439D19742471E00AD68272374BC825730A44E92E63BB423F8F0D6
DB2CBACEA78E60F575AD10ABDC485D49F67FC7DEB97F276D1C22FB369DAE3F07
A2EEC7E87604318B76DC8770E53081FC212529516006AC48C1F4C15A90E0F2F6
111F681DEDD6B733C40E57F44EA8E149D6C7A329919FD11587B9747BC0EBF36B
3E0A95CF0D5FAB8EF96F8DF7D8C4DC561BB08006A32C07FFB4667446FFB98477
61D9D733596A478E52F2CBBE848041EF2EAC35F8D2F893B09FD48353603C945A
DF89490ADE623FD53D997D118FA1A13D29C93DD3B25F3B2E0E93BD6A66B0F10C
4E5C82BBBCF6B13C3BCE1C72847E700B66087F1D79F7685331ACF44D1F2ED6AB
43AC49C7B52707C32421267E1236E2CBDD3DC56EA30E3C7C32CE86363BAA8ED7
D141D7ADF7112DB70A4B6E05129B5BC8D8A243D1905D51D12E7CD285F34CF598
4C1D1F9C78CFA5A4853896370D6F49A6E02F8E0994CD68310DCFFC21220EB01C
5BEDD31EB6638A0018D9EC1472359491D6976E56E6D2045304B158DE052D7690
A74FA698AC88D0DE43044AD2032621ACED64DBA9F0458FE35C050A1B99DE67AB
CC5189B4410A056F613DF18D9A82A2A2E7E35A2CD9C4AE2209462ACD5A030FD0
6EE53F2864F6151B111461804D3B719EDF2696B722A5CD625168B612263826E8
874BBA7ECF99E9CA1E20BC9B7563FE9984D87148B4090736A420C5F9951482A0
4004D2AB894E7DCCA6F43BD7346E5754C788A65D8A7C4D14BFF2166810613F15
900A8BF96DF1A8D40B53B699A82060E73B35400F979AE4F3739EDB26F8523276
B30C02EFE93AC16DF32768F049C7A12DC081B6239EEE78B269EB284A4223D414
BD893CCCC663514EF543CAEB94E21D696625F84FB96D7796E4356A988CE0F613
F8840A2BC918221E03AD725465871DAFA42351547E4D04E886F7490703A16878
0F9BD300B4B525E0E3C84CD88E0499C602EC4B74CF8B9A5AAA35CBE10F1EB4C2
079D339ED6FDAA3B5301D239ACE5B802A6EBC0B03CE606CF7C8D21D0AF09BC4D
0B842F8BB4B44808D146514D6E163A853F51960C401F08F06371B318DE3DF6EB
DCF49FF222F01F05
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS10
%!PS-AdobeFont-1.0: CMSS10 003.002
%%Title: CMSS10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS10 known{/CMSS10 findfont dup/UniqueID known{dup
/UniqueID get 5000803 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS10 def
/FontBBox {-61 -250 999 759 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS10.) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 65 /A put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C4488BB4EB864B48
63941B9739638D2E6F3CC778582B46AEB4E466D89D1C211225274356A4BC90F3
274C6AA56E200249B7D0949A3FD4185DCB3E5286910EFD7CA72D5D8E8052C96F
388D12094B87D3705CE64459558CF024667C0FE96CBB32B0BC9E51037D7BD62B
E4B05FF99384E71D78441A79B0B1DBA1CAE02434A9FAE46596FB86B873B1670D
AE0BAF516445A0DDC127F8FF3ADA0B10EC30A9CC1F7E9248828B5E8AB46C3FE4
154B80A54128A08777F5F9B8C519C7E3B632B3476F007FA156E9F39FBE57638B
4214CD2BA79BA9DDA0F4C073AED814ABCCC2F7906C57A872C00E67FF03AC1200
29DAB92376422FA21C67CA98BCEB8C431CA2D3EDDC16972F84BF6DB2F705BAB5
CAB39C82D139FB1304B9E7BF1F6FF447596081D5690B1519E468D6BE49C329C5
C9C809023EDEB9DCE4A6D52A8049E0CC134E8B41BFC6558CFCAD3D9D2773EA16
131567AE6231B3235869767A1E7C1FA6C8D6FC1B276CBB1CAD14D376188C9682
302836A9290E587D4225EB8BB1DBA2C4580A81FACFDA197174FE948CE757C575
F23070FD84DE121955D7D9307BF986C5E739FFFB6CB76822C341FBD9FC2E3378
AC9332B40C07D5B8745D74E30F1D719EAFAEDBF5FBC40D0546F69A66072D8A49
28D2CC2E76B9B1EFD191E0BC7510C2C8761BD92EFCFDAC263342A01398A56D18
121A591FF5CD4AD8B25699A7897E60BA940336BC17B9EC9F97C2464D031F958A
A3548D0C97C50C580B6EEFD0FE8330EE2BB0D2E7FD1DAE33448953544A4B1C5D
8EB57798D0ED4B22909FEA78ECDBC4D8A124DA05B9999242D68681017285A0C7
69041C1F79442279FBE328733EA0A6694D68BA89739FDB9297BE0CF1808C07F7
BBF6F1538DFE084EC8C0EC24D883F6CC08A51DFEA23EE920F44BA55FFF58E960
C7BEE551FCD2D5814DE7E3F835608073C2CB80EC57100CFD484C837881674E92
B217F4D11165427DACCC29C129005874C05CDE5FBB2D912368EA2B98C45AEDD8
8A0D2493F60EF36809C8C6EBBC7856F6656E8D398BCB29DAACD4F7D4300A0B01
161CEF51195D2C58DDFBCAFC1C03F49304ADF02789889826F1E20BCC14827565
F2A45CA57DCC61B52E33638A0C6C5A59B145E82B82571DF1806EC40FC0E8634E
A34A791B1325571E19F3AC2EF6FE68A14B0ABEF7EBE0EDA3942E85E5AE967A14
0C5AEBFF2A36DCA8866700CB7082D2ABE470864C44AEE1F6D180D511304C8674
D02FAB12A7079ABF96E1CA3CDF9D75532123E87663B1D524265AEF63EB5C2169
B67A651A101E1C7EDB008D3DB06DB1FC1A81B41B291D6C4A58FB57989FFCA434
DA84B3914D1D80B17AA3A55A70BBC06C49DD5F7DDD03FEB0055088558FA192A5
261477899857CF598DB740E82D035E84CF17B33048CFED2DCBEBC2B75CCAEBEA
B6C5AA1C6978FBB36ED98D9047028360ED430A0AA69AC85A8F83825EA649E1B2
64B260197B06A24A1DD969CEEEE136FB046D713D0630B246BD41CA285F076038
F7F8431913BB9A3E70311844D4C22AA446E3CA217A9DFD75A898997130269B29
AD4AB7D9662856E677FB2DAED7078639CF31C6E6637C74DE2B5D0ACB88BD61F3
CE3C5D56D3D4B3EC1ACB33EACBE05E53A133EBFE93CE6A0CBC8F24BDC5B31BBF
5B3E55D6B40B1CED389076014667E28BBBD60145A06BDECEE8011A2C6F06D091
73767A8045CEF2A110B614149FEE783A2351FB2938A9F73CA406538EAD82ACC5
A3DFD3DE00221E1B4EA977AF8C89661357FF7D2F1FCEAD6CFC9D6AD81F95100D
EA1F328249AD84AE849220E6593D45015B4D7C9527F3063E9F6DB6E572092A1F
1F460696227D5F0FA5A5484B1F0D8B4A35066451663BE448D924DBBFD388B6D6
D7CFC87C9E75B7CF79A4C9207E29E0BAAAD7FDF529B860F7731EA978E335334C
13CB2F0A4250F5957B44CAA0674AE8356F586A24FD137103973B9A1FC31090C7
C84DC5D380404BCDF3FE20C6F74FFDD8BD1DE845E99DC6FE09931F003834ECC8
08C5D962070B6C44F901A787CCEF048A2C584A2285506B4D4E82B1BF130E2220
B6C8B3240A4CBBCE16AD3676B23A50B75F82CD88D1B8F21D30A12716426112B3
23DFDE5A348DC9DCCCE5BB5DB5433A5AC125DE1229FFAAE0D8319B2929986EEA
56A93BA1FBDBE617F30852A3DC8C712DF674169C6D656F75E252187A085B2788
2467CC4DB08D48EE6A98C61BC55E6EFB1938FAA718802B7587B94C8F1477E9BB
DCF6E02B5E67FE3AD9D87C321CD9BC0CCD36B9C4BC601E6BD552EAB8E1C940CE
3A22F3C2501C3C939CB4F17CE97566F0A04602D2A22A05CECDF4A49CAFD6332D
5870E1F31AAA5F86867F71610CDB83E473B9D20BA00D8986D7148E0EED03865D
9622864B52B09D12E0C5FCDD023D29D5AB1CACFA92B6FC14FC84E95F407861D5
2BEE3301AF399FD7ED04DFDE6679A345A282E7FC08D47E3FC8969D3B00ACD7B7
F8769647D6D4F4106340EF739583374D023C2702C48FAC1B643B5897D2D7DBCB
73257712A0FDEEEB98A021D218CDDEBBA34687E23C4828D7F96D1ADDFAED7EA5
B279322E6D55FB486AD8F3A8E7B2C67915564FE56F0C9277A06B29C47FB7D007
11AFDDB3FC1B173B4E449CC6B198041CCA0624D81B4840FE5B63BE72157AC6E7
03E5E95D2E2CE2E40BCE8044A8F2AA45F855484A891B9F0F8F70188AC66A8DEE
F4D656CBE216E6D9AC33BA8DD0685D480833E1226784469A221D9FA3CA600AC7
5574B5226649A9C48CCB43339942FC9010F86BAA2D181AEB487A92A96BF2EDF1
60F3B93FDFF4137A25A8AEC5ADF8613019CDB103DC4367EF3D8AEB4FED0E6BF7
622AE0CD3CAA0321D26CA4280CFB60D08D9560AB8AA5698231171B881BE9A27F
BDCF3162134126212C523738D221AA05E31CEE73D9D40F73C450B6AE2C1E70D5
C37162BDF55943069923A290A6C720042566E55A21CD81C460818883AB016C16
8FCCD1255A66977DC1C110261D7642199D466DD3D2493A2D47694F842241C474
1752B00DA03E69CD16A8A14BEB8A431A315D19A39BA978E46EB1189089FEF647
F9DBB58AAE6B3FBD475E4DCAD241A051DD100ABE81D40ADF18A4C50F53BF749F
D6F7C8E02A5665B4AD18DDAE79096DD447F8BD32C68F9F97F05E0071D9E9AFEE
257B96D48ABD9920418E17C8F027E9E975E4A08DFB1988E7104CBBC1CAF356EA
7750AA7110BE116AF1BA69A94776E4356573B38472A8A1292C63701543B0F315
611A0E0595B30424A1137478BA6F990AC7C3AB4DB69E75C222B617F373C521D4
246E954E9857AF59D1E6C36412B643733CF5E1C90389EF0E5E0DA55D3AD12E97
E7630C315F72A03CAF22E0ACE3AAAFC1D496CF4E5ABC49C2DD5E264BE7EB2698
AFF36089B5DD2C53DB1C1FCFBE1E89D41A95DDD278CEB29DC85FD1DB8B83CAB1
EB37C531E9BB8466ED6B8B60258D3C355626CDA43A32834DC89DFB11E5FC6D68
0F78CFA871113DB81A1690250A6F842ADA15734CB6DF7C6ACED6D8D586BC4E1A
94EF3052FB0F8B9454390B882CBB6E135AF1F9C777AC362C2A758C3A98117120
73C6E2FAFB580716D4B2889A4331CC658AAE996245685B973D9C184541385680
AEC2956107DAB00230FB39BE98D3CA898D917E5F2088F26CBA4F8B5B115B6443
8753331233B10852702FC26D9DD4C990C13CE4D0DCEA23D62A826A4B4FD16070
5F3638C0A50A3373A33FCAA6F3644975AFD0560EE5F2D1CDF08820373468E4FE
6679A229D6955CFDF7ACAA92A87E6D8571AD18CF59F84F88A674B2946FF20A28
B9798EAA22442415EB46B9498DDC0F4BA6ADD347AB43E9293CAABEAE80127378
129D5DC69F6DFFBDAFA5D65580239E8EDF6833D0DE6DF75F0FD090A83CE0974B
AC947BABBD1B1C7194DDAEA37B0CAB477ABF9433FCE0243C8D308409427D1DCB
8EE4FC36C7E5CEE104904B520B3F6E677A5B92F694BDBC2C799991667E0EC14C
B95EAE7DE1854BF4542F05B4AF401CF67FC3E46EA5A0DC362F3CF177B1796DA6
753AA803E724D1721DDD1BCB0C12CE0859E172D2A370C3697286F80D9E138AFD
A0EE016805F847BD30D11D8B891E54C77AB51A7CABF76BB14B06153C7F811FE4
93FC4B7CF161051A458EDF767DF94F487DB939A2740B4242BFEE234F75084DDE
207E84533004B933D43C712F0C71DA4A00FFD6D721EBC93AFDC4200E3B8DE433
3ED3E1DB799BAA27548ADC853AFF5D9D6BD92D644E3CF394789C99D9DC054A26
7770AF5DC5BD6563929AE11BE341F036584DD573D3F43D9D975201EF77BEEF80
D1EEDD1D4AD5D4D4DAF6D5B9D4C1736CB111D6FC74C236779C0ADA430323A825
09EA8D0CB1772220AF28B93098BDB36913159208D1B2D7ED45808BF7B686419C
5C0E3DAB5BC9830FDF3B494D624EE8068BF6F5212BD69EF466B9A213047BD105
B848F056DC544A8CE66C546B1A4DCB4BA29CF0EB4DCD9C2452F22172AFF33B29
E97E12D8F0D312B03BD9E5377BF0C81D884F1E79DB66E8144F106DFD2579AD26
C693C5B68F3AC46BF0D6281032D4D4BAEB2243151AB1AC0BDA2ACDDD4D590C90
F29B335DF8F57DC593DCC081FB56924028E3161AC4865B49D1B0F63F5EE866D9
7A71171C09B09A44B0E32F03494D9EA63F3C89F5E772BE25A6557F119299E989
99BA041694ED805AA4F3BBDF00D88171C9D43A9085A287A36A1F0F9386F2A98A
96815CA51F06E1CDF20B757983C5FDF4003F5438232159F325C6335B734FD982
1423BA77D0EFD044381AFBD0704E3DE95D23A70E2428E9AA355A9A8A25C6C74B
48488C14DEC93A766E112D74C83576ED355F17A809E8D3F9C65C4E3E14EF484F
4658DFB57597E2A4461D8044E95844391C1275D63F282B37888C842A5151937A
45007547263D70195ACC018A373D498B88C5A028BC66ED96A343EEE74D61EEB3
D9472B6A549CEB8699F4B35154A0E2ED22867E4F9E4A76311EB2C9F9078FBA81
838EA49C2966BA64C165434DA3093206B70186BE80600B891D9979F730FDC794
5DD6D8B2090CC67A634B719F441092A10C447A86ADB78DAE45823ECED5FCEADA
ECA52E363D913D9EFC0ED98A5A1F823DDA3350EE27F09C14E4C7298CC0FB6200
DEBC640C68C82D70AFB7A7BA668F1D7948686206884736CD03D9F6E6CF9702BF
E3C932CEF3CE07FBBFCEC0476EA6E8D5D4C5C6450C8FB236B89BB82D51886240
5BA7462F50A88F69228DCBDF26B7250E90B3DF8E94ACA1CADD9EFB5C73EF9DD5
46052314D445CC92512BA231F79A09A2F0D91976B160B8C9BA055DA4AAC1300D
491193EC66A6DE12BE01EEEDBC3A2291DA1F27AB76596A236B75E19FC5F1FB6A
DA1AD835CA08B6CD03B97B4CA1BFCBDD2500BB09F1A1B0438E4A759370EFA318
F062BA9F3D352572CE232E6FBADDAA5363807D0DC5320B807FE5485C8CB09B6B
0BED9F5B1300FF370252DEBAC9DB25CE2EC494E8EEA45FC6604B3C104E81B287
EDD49F3D7430EC9176A16B4FCEC5DF68DCC11ADF90BD5337E2E4B59BEFAC8298
E5ED2C7FC5928635420FB1955251932713236DCE28012C86F63D12AF1DB634D0
0B8CB8992B8723548177BD6822A808FF221A9E38B0DCCBC1F3430A9BAEDA89CD
ACEBBDD8CCA5E17F1CC37E35A01E058BAAAB6BE7124314DA19962BADB74EE73D
8FB13FF6AFB6FFF97926CA045B62B98BAA753AB0FC78B881D3FAFF9EE2FE918C
8EDBEF87637F1530E3E13AC090FF81F4136E08D5F3734327E643CDF621278741
A17AEBC56E21217888A6C8B5ED4269731910E7E25693CFBDD4EB4A32698F2447
4C45D73E810B627D8719E4E34D8FF378F9B68BFB149AC67B3B1E55F20D097FC1
AF74D46F5A3923C63DFEBFCA210F6B257F5FF3F2AC34CE41C15C9977634E473C
2235295C05C3DF6B3009C7854BF11CC87471CBE085793AF9C5D05C5479B9E780
14A5A6F3F6DDE5A18243DA15732CCF26ADE40C566DBC3C62B71D46DE87A12C6A
647CAC923254E2E74AF882DBD5C9E108A9160393C5CD12566AF7C824EFEAC56E
6F05B92C73A76824C5ED1735BCBAC61B98D509250C854CF1500C212F574D18D6
4426B8510FE9785B814A70E75C9234D42483E736D0689D3561E8EE5650F33A36
D50127589401D267BA6442E8616E2CDB1F6691D3FC4A2A377E5E154972E890DD
60CB463E9EA9A6EA61087DF452FA5646F69BE879337EAA0F5DA4438FF0365627
4E3B16851C2F08E976FDA27AF451CCEFED00376FC3D6E0C160F0BC19544DE289
BECEEF9A067FD71D54DA3A4F73F06E2F522BA07551296214DDA47B1BBB1212E0
1100ACB5F65FD30C655A3402C83058F8ECFE48FA60B6A3DC86C4996414130194
6676EC7F37454023AB53E9D9EE60249ABF6953E76DCE3123DD268BBD492412BE
65D7C3E5A5E483C381182A8F19B506F0AF6DCD55532B89852D1D96021B22E9DF
D9D072BD7DD4450577E658B433A84F92752B260AFA2EC4A118747CBFE36AB7D7
6D5DD96A119AA1BDD0FDCBC3AFDAE5FF72713EB46759A06CD09B5CFABCDAB0E9
85599506AC07AA525978AB157496163AAB387F079EC9FA1F9E91B9C2FBCDC9EC
7027D77016760539AC03F1C1DB242D28D6EE946C42DD2262D82ED48C3A839853
BA977046F0EF373AFF884AC3112D2FB319421C3165DFA5710BFB9AB9595A10F4
9D05704B9E22137CF27F4B2DA9CEF6D8801D5F792969B2E58FB539B8038DF440
6DE20C0313A7BCD16F279290AD6859B0E657CC3041C7928CAE35B9D3A681F2A3
2D40F8EDAF1127E754276556C95E1282514B6EB6E43FF4F0FAFF28C715E3F39A
374415B62C1F5F8E31E006D6ABC736057910A3729AC60360CEE1B2C8D9F77336
39CAC45329A372205FD551B9E9EA5082411207473D9D90E76136AA70180172E6
AF6EF3EF6B38B1906B904BE9BD5251EF067738840C28877659B649C6C4CA328F
1BEF8A9CEC2CB062702F58CC0B8D2D097FBC278F9FD894E10ACE1DEC4530CBF8
E4E467B6DB9C596DF0C3D43E6AD70F30B733EEE692C2EBD68756D0C16E1F00B6
AD011B5DA073A769B53C2DA2E7C9B7ADC6F551BF4DF4C39C66443692C3DC62CD
B1E094013F364D04BE2FBFCD1C7B2836180E9022E0434421FFA4317A50096684
CF0B8740EF680F27F4A84AAF2AA92C64883BAF57BDC60C6467A8D4E09E6316FF
9BE73053045E5F3586DA3BD1298DC15D751913FB1E72EF80047F6B33591B97D3
DFAD34EB224D64EF60F5B4ACC6EB42E1BE0CB2812FF2F3C264AD2E44F5EBA441
670CA0A60E73176ACDC4E42E74F8F489C73481EB5D46A61FDA1C0FF9F8844DBD
99CECAFE2A72833E4522981FA13713AAFAF8F121E60FAA6F379B2C8874CFF23B
8FECE70654E5855E525A403700A96CF7F8111BF2B58386E29640D82F1DD86900
E0E203F3ED554209CBDA2A61A5641D4B39D98C5C43D4575648D06BB82B6C4D4A
F043EC61B17C208CE8B4F43A7BCBBE588A3D13A183D79A47404223037FCFA4F1
DD237344E589F161BB9BBF3FAD2E28749350DB9A74C09E894BBCA85B82E704E2
99788B24642A7D0F0FD96601CF1AE4819EBECAB89824A0DC1C03BA4B546ED36E
DABC8D49CFAA53D2A9A5DD6B3431E364C99ED0323513476CDCEE49BC413E50BF
51EB93563DC03B62F84C5F96ED713F288D109C79179AEC41424822772032035A
40E84014F5BF40948F05E8562C99266B9E54AECEF94765BC79375C69A0385023
A014B8705931C9A419C8F2B72C3F7054CD6487E75ED2E852BC19302D02C671FE
3892C7AF2A90D6F29771AF31FA95258B6F3434228B377F5FB494E28B5F0393C8
9DEA5E5726B81B7983D241BF7F78928EF8D8528C8F6DB7B307D720243DF00E84
A37A7B2C720348F83ACEFFA78929F4CFB5CCCCB2A074C78B92C8573750B91386
CECD4A1243D1B002B45B933534C0B4C51DDC50BE37BB6E42B8FFD25C9B6A4A80
0FDD3858D50F2166A9067E52D8B453FAE2DED99D96EF9523BD348F2C93DB66CD
B17BE44AE1E2031C3CB01E713C3B3CD4361048D12E21C486C25269C5BAF6F1D4
88A0C86DD17FBE4BF01A7ACD72008DA3EEB0BBE3611F26BD3145C75C837157BB
4F71361A279F53E8F1650875D2C78BAFD6B2FE27B6D4E5AC2018D482EC1B6B5D
77B4E31498CAC80323F512CC04F1ED6421BDD6E2223145BB57CB87C67462CE46
FB1F601245917A88EF37239AE1E09507AFC7D83CE85563A9EBECED817C38D906
A5548034E79403CA78C9E4BD474269F936D2A331B19D0EFE83937474321B7E4C
63295997DD487BC4B2C0BFA6459AEDB6C7A96847EF66B919660191C5125D607B
A2BE87050F8AE8EA728056655F9D9DA1ADBCBF522BB3CA2A986A3005BBCB68F9
AE872E75C24EF7B549EC573815316CCEC3910266F21723C2DF8BC5C81D40576B
7B51F7FB61A69E57A9391E0616BBCBE765D062AF51CDC1817BDFEA0307F45B61
51F6E792515152B9C3B707B2F56FF28D715A23DD1A87B85850B6C84FBC95A2E4
9F67EE43743DFC42B11BAFAE9F8BB4BE24DEFEE5CE5E1F28D0E2B503DE258928
DF4327A8AB0B97F38915B88662094305D0488168DCB05F970FE5E447B6F81596
5D24D4661D264069C481070D70F09794BBFE2226E0E813C2E24FCCA1C381186F
39ABF5F9B03456E6C20B8975BB8F760F0FABF86BD8A25F8B88F6D3828BE5748F
026BC08937C9FCD2BD1C96507DDE18A030D5A7D1079EF23AAE37FEB32EA10FCC
41F8A64921FC28692254B22DB1F4B76630A5A218AD0F607BB025D150B747B6D0
803E468A4E4CBD046182511496083F1C3B8CA8BB4127441B2DD92C63EBB698F3
1F226D065FE16CE2E1790D9E63D3CC5A1197357CC9CE233C9AE1AF7E4ADCE420
CFCDC65ED602189C56AC9BC1E1F618CC415C3282C8B016470062C84EE881DE2E
94F27D38A21F69BE40880285EA03DB22C8FF6E305D9130A461E044588462BC7D
8593EC7ED22FC6A94FAD67E1CCF6C7F23CA7363FFDBF8853D49E679BABBDFE82
30AFED10E7E1DF194DB4B67F9329553020A705896BEA803A8B402ABB06397C53
47C03AF251A9802CE722E884FBC377353C61B2622FFCDD80DF4E952AF5DBD757
6124296FF7CF59F35F59596BDB4E650A168D5A15973C3957A6F18DAA7A2B0990
32A3B80301903E51A6E537B214F8BAA5FC7438ACDC32765C432D1CD4221A2CFF
5465B980D2352BCC1D9C019102BF4C20D1ECC123B924706D5B719CAAF01362CE
03DA5C2D566709C0A4529B475BD107038EFAB14D28BECE236C4DB5D5CC88E125
A43F9C879CA1423106A87D2F8FFEA9F1ACA93E4CA4446C16BE4786792B6AE670
A734A35B8F5FDE5C803F1DD8FF01E00E0CC810C1FA3FAEADCAEAD09823F80BB5
410350CD2EBD158278D1442E05D0CB5B5D40A393B4B85A2A7C1F9EE7FFD47237
0DBFF9379C285471AD6D8CBAB8682DC2477EFB733F915D0FDBA1487A14640DEB
9353E71B78DD9224B0C471FAE70AC61127D1506C1160446B3601520D65076410
0DFC2AA15CFFD23E9501E29AF1D75FC5F0C6F5AB17E729919F444B28DE96F4EE
FF8AF6D5B79DDAA2450EC6DC6C42A0556C2E38FEF3A15296A855E7067577FC98
07A88646B694D8F243EBB3F96B57C6BD029C1FD1E524DB4C80D3EE5546F09B61
0FF6D78F91780301DA946C8EFD1A8101ED300F5C55E6CF05694A5A00BE3C5A5D
1A031A481B9BA734DA409E2F2E57DBF0F904764EDDA4B633039CBA1588A9AB1C
D2FBDFBCA801C40BACAA4EAE84F7BAACD7E5155536C5D4DF685D06D2A7E40B58
A9A1C8D2E2BE741D163595A8748BC040B244F439E19ECD435654CC1CA574664F
484CE7850D28780F4C27E5A365D6559E4A7D5DC533576A42691C21142C6EA065
77687E7C53E366291499F6C3363F7DAF39CF226F4DD1F361E18B2A66590AF579
E553F6A24FFDE046F949F45A1F7A31815474B799CA1A38E24A6BAD32DAC9B285
6FFD349FC352F295DED198F5D9A5F8ADAA312B3E4E9A7C6CD849BC92CADF7033
4FF6D7B4E2C519F38E192B4993D7B340D2C073925D5C22EEB7EEB39EECA37A71
D6593FBB1F79897E8E6016C603D09F3272040E87B6FD7ED4C0CAADCA42DC9F39
9746717C61C9E97CF2B7AD52EE40311E6C80F583B2A8F351E808CB0FF7777C9B
510F249E44A9CF8C217B888BBA7117828D4F3CFEAE02BB9EA445C8B32709B1CB
C233ABC4E5F1A6818873A05DA9CC4B4F154DDDCFE5381EA7E516F08AD0320518
BA8860B9FDF649C4F1E36E0461C6A9264929BC0B1F8F1AB832CA7BC2DA063B74
4499393F22F717D1C00AE3379D5D994025D5C07E46DF5CC72CCF8E819066C444
938167A92417DE149C5FF12AC8030CF0302D97E7F9117A1CD0414A63E7268422
33C3E71B8AC9A249438B89AFA2B2773DA7525FB9D79290EC38C4ECF30536986A
E9DC82EAAA019518B55601681F13720592938299E0E991F9EEE44338B6A7FEAD
AA6AD5788BCE622CD1FC4E816C00306AB3E539ADF9FC8F8EE723951E98EA3FC3
A24B29ECAA9576D6843017E989A59A8BF7B42F9D5BCB53A13DC2C25BE04B8D73
CBEB0BABFE9550C2D700DE6E172614E8629D27C2D02E0D0B9D8D97A1E0ADA607
FD42FE9F91BAE5C54DB8FB217B41F04D3B6CD4B95EF7A46569440A7338CDA750
ED74FB472278DE7718A2BAE87BAFC85624AAA7A35FEDC9BA2BBCCA18F596EE0A
7458CE7F0453348C374BD48EC543299D659144AFEF2C90B51F36514C77A22FB7
CAD824E4AF1530BF15B75F17FEBA712374C864F8DC40BA5ACDBB454ED34BD198
FBCB405E4776B5232387DE5E0D62F4BD1449DA3B62020EA68D13CE40413347EA
4D516F79DECDAC264261A1F31D6158786D4E5837C718E1114A96A82240AFF940
BAE3D2CFA9086C724CD682DC94D4022F9A6D1075B634DECC66E36F145AAC03CD
FF970A814A83F723CACB572FEE8C168C7B9F1DBC310F82035380F770E50806A4
83F962887048CF5231682AD3646E56FEEBE185368C5C11B707D1EC6B0A55C5A9
3A381B70610FDE602717B3AADB039D849D3490FB89A103679F04953BE7867171
FF6CD38318F8B7541A0AE09CEFE420B92EB5950B78D6DFEBD6C5645A0472A185
108463F84055454A3AA0D7B13E792A0667AEDCED04074FA960E1F3DCD3D2B667
553F9F778A4B9493A3F36CB9B91684F8EC5A9AFA6A29B16A2A7475A3CBDEB9E5
B3EC5B16E77D2AA7492C3B7DA36225D0D787435D77C2FA61D10574A8B748874F
26CA7FBA6BCC9E368275D451531FF9061BCCDBFF33CECCE9E46FC1E9252CEBE7
3B3616878891571D5C6FFDAC5D26CDE13C4A653849A56FC7E62EC5FEF5FF05AB
67CD3739BFA872AFD6F7D8694E569F878A511A894D9A62018BB257E02977F1DF
588138A1A20A41EE02C16F74F88C267ECB1CABFFB9F4FB4D5B27596B673FF18C
110647038DF04128F86348FB4D143D31D4ED668104D0FC9B44EC33F90130FB00
7D5F52B3254804125DB1F9F41396177D041D919DAAF1D22F43312D973B796111
DA4CD8FD5D89A330DEA58F223EC173F592790800DDFBE33CD1B76536EA67FFF9
2B4BAD81F17328F31CD88EE67CFD91A6F4A63EE63D55B41D430AF303D920F507
20F060F70AD67BA0024C1EA0E3A080CB1E44631FEF600282F91A5ACBCF326E93
A7C70FAF912189E32685F2708C7753756AA50379F073755C4E406C705AEF4694
D22330980B5A94344EA76C5E543A75AFFDEB3921E65976588BA3E06B329BC47F
D62DAC75F2B1ABE227E77B3884D6E2A022625136B1FB9E054F29B02F3951CA19
DCE0F34EDC171071AA7C2234E2B1CAAC807A3D12D579687D7F509017B3C0EEAA
A51C035C1AD01101089D7BA3826754125F75E97A697A97FEEF9FE3E0C10E7C08
FBCB65E50A537761036296DB87985809C5BF95239015FE62CCC8CC5F8BB368FB
340206F1F52C104DFB236B12EB833FD50434D2C6361B3B70C1C275FB2A5A106C
EC611BF93A71E82D763F52C18DD4B03CAE89606A8AD14D39343CC90A5B5556A7
0E3AB31BE48042D211930DABE3EFB386B85A853BBE21F4E857279773C1293101
A9D3E182CAABFBECC9B9AA8A3F830A6DAB06C87A986EAD0444FFAD4393852800
C3D2734F6F8C8FBB189159512C59BD8EFE23DCC3BB8649825A578B9A75586C9D
5AA76C656978AE4E38A5227427752DC4BC56BA0636C91941D4B4C7B47B5F390B
39CF605DBDC15A9F1556981C6250ACBD17F04150E2C2695C1E4A00B507EE8D58
A8AFAB75EE69393195F2B8C1672DFBE01201690ACF3CD07D2783B74FB941E7A6
67CB161C54BD4ED5A497342C3E969CB5360AF0FD23B61F9AD8388A19CF63B5B0
0AFA9CC0C0AED80A0882C7C2F7A059F19EB068ECE88EF8DE97F8AF2DB016CC1A
385134D493C7416417F5DF7F688AB0D43220AB80CC6D53EDF11FCB170CC120CA
A54981DEBF6AB54311CD70BE668365F8373C485E64DB80DB4851013A91CA9882
CC7CAAD5D9F1FC9EC1685C8FA43476AFD5238F202F6EB95B7A62254C92CEB1B1
EFE0B5C70EF3E3A2DF5988F6975C9D6902C2CD37D254928AC8E26799238ADA1B
EA105ED06A0E6F9C8744FE485A33C02D6326BFFDEF68F0E8DFC2EFFC3DFBC053
FB8F5905301BFBF752A0AADD43BE00D58CFC32379D2082ABDC37DB6E8F2B1749
CF6A8995743AB1BC5BBF294A99BBEAD835E61DC7714A5B77E7013D2756F3C34F
F41408C968043349B082C899EE1FFD18B8EBC41D3609A77D253BD85DF059D247
0D7B89A31B4E5DCB14245E5F70684D78154E7254B6BE98AE2B33C404D3295E1A
A3CF27CEEC7749D0C8336F1324AD15083DB36399996672239DB04EFF45BDD592
D380D8D49C8005739E7BF83E244FEE7F90F4D76BC397719E263173988548806C
5F24E6EFCAF52085835F1CC36088DC22EC9A5A03880CE201CE35AF1EDF93DA86
970DD4C3E207F71066E8674776CA22C1B7AA4D5C1382CE00650FEE0E78333561
C728001577123F76D61A15676469057AEADE92F920991A320B13C117399DE1ED
B1CD5B48BC0A497C49DCCEEBF3A44CDE4641A9CEF72029C0899B5B810DBB7987
F23D22AEE074032DF80C8F2DC1A7D0978813067D64E0DFE27EB7BD1BC1B4828B
21181B5B90CD037F3CEE80993D2F39ACE90A41C48B1E0E2C2A5B3A978C85D6E8
02EC353458B86D5B26DE0334845BFBC5DA791C2C71040569D5D0140AE17DE962
63A65899F5A7E471257E44093311D214D2CC45277BC2F62D796656910E6151A3
7AAAD1B3014B22BD86AB6CA0F8472E0E5BD418B55B4ED8D8E607BE6D836C5F4E
CF7220EAE4FCF18291EEC33D0C99222794892C030BFD4D361621EC71B58ADB84
EFBDE9360F46E183BA45F0E4AF4DDA9495D87718250B0445413442169AB35EF7
3B4C6F230A970CFBC3ED861A56C32D2FD19D3300B57DA2EBE46886A08AB1C5FB
142363772C87AE8D777201F40B3925B5E15B58D7023F2C9E5B41880ED2619A99
35CD1387AE240CAF372B06C643D7B416BB2F84D10EC233BEA57EF640C5E5D93F
FEA93E5635E3A2CF65BD8609F4B83DF1E3654331FA5FB6260333B98319141D00
7971C6B5761AEC3B7B3CF523D3622B729403C3DD4FC83DA690D97304F1E6BA53
CE1FDDEECC52B5771F29FDA1E47B16AE187100EAE718C1286A062F62
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 55380987 39158274 2000 600 600 (powerdot_01.dvi)
@start /Fa 255[155{}1 199.253 /CMSY10 rf /Fb 194[152
11[98 49[{}2 199.253 /CMR12 rf /Fc 205[71 50[{}1 132.835
/CMR8 rf /Fd 150[67 105[{}1 199.253 /CMMI12 rf /Fe 190[97
65[{}1 132.835 /CMSSBX10 rf /Ff 145[114 110[{}1 149.44
/ZapfDingbats rf /Fg 154[122 1[117 15[146 33[132 49[{}4
239.103 /CMSSBX10 rf /Fh 154[93 1[89 15[111 33[100 49[{}4
181.818 /CMSSBX10 rf /Fi 139[38 7[25 2[25 3[47 55 47
14[72 59 33[53 49[{}9 99.6264 /CMSS8 rf /Fj 138[86 60
64 11[83 37[111 12[83 1[83 83 83 3[46 44[{}10 166.044
/CMSS10 rf /Fk 134[84 1[124 84 94 66 70 62 94 94 91 94
144 43 89 1[43 94 1[56 81 94 81 94 87 7[121 4[124 101
3[134 1[159 30[51 46[{}28 181.818 /CMSS10 rf /Fl 136[148
100 1[81 84 74 2[110 112 1[51 2[51 3[102 112 2[105 8[146
3[146 122 2[140 158 2[116 6[128 24[61 44[{}20 199.253
/CMSSBX10 rf /Fm 201[71 71 71 71 71 71 1[71 47[{}7 132.835
/CMSS8 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop 600 417 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with powerdot class)/Author ()/Keywords () /DOCINFO pdfmark
end
 600 417 a
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44 TeXcolorhsb
Black 0 TeXcolorgray -600 4178 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -600 4178 a -600 4178
a
tx@Dict begin startGlobal /pst@angleunit {} def endGlobal end
 -600 4178 a -600 4178 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -600 4178 a -600 4178 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -600
4178 a 0.08026 0.61365 0.44 TeXcolorhsb -600 4178 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -600
4178 a -600 4178 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -600 4178 a -600 4178 a
SDict begin H.S end
 -600 4178
a -600 4178 a
SDict begin 13.6 H.A end
 -600 4178 a -600 4178 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -600 4178 a -600
4178 a
SDict begin [/Count 3/Dest (slide.3) cvn/View [/XYZ null null null]/Title
(Sec1) /OUT pdfmark end
 -600 4178 a -600 4178 a
SDict begin [/Count 0/Dest (slide.4) cvn/View [/XYZ null null null]/Title
(Slide Title) /OUT pdfmark end
 -600 4178 a -600 4178
a
SDict begin [/Count 0/Dest (slide.5) cvn/View [/XYZ null null null]/Title
(Slide Title) /OUT pdfmark end
 -600 4178 a -600 4178 a
SDict begin [/Count 0/Dest (slide.6) cvn/View [/XYZ null null null]/Title
(LaTeX, i*i=-1) /OUT pdfmark end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600
4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 239.00406 422.52342
0.0 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 422.52342 239.00406 0.0 239.00406   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial -600
4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600 4361
a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.1) cvn /DEST pdfmark end
 -600 4361 a -600 4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600
4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361
a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600 4361 a -306
w Fm(1)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 211.2617 209.12683 } PutCoor PutBegin  end

-600 4361 a -1641 4499 a Fl(P)-6 b(o)g(w)g(erdot)72 b(Presentation)-914
5088 y Fk(Overleaf)-1130 5587 y Fj(August)54 b(4,)h(2021)-600
4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600
4361 a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.2) cvn /DEST pdfmark end
 -600 4361 a -600 4361
a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Overview)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361 a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial -600 4430 a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Sec1)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361 a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430
a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600
4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600 4361 a -306 w Fm(2)47
b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361
a -600 4487 a
SDict begin H.S end
 -600 4487 a 0.08026 0.61365 0.44 TeXcolorhsb
Fh(Sec1)p 0.08026 0.61365 0.44 TeXcolorhsb -207 4361
a
SDict begin H.R end
 -207 4361 a -207 4487 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 -207 4487 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600
4361 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600
4361 a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.3) cvn /DEST pdfmark end
 -600 4361 a -600 4361
a
tx@Dict begin { 242.94968 164.31557 } PutCoor PutBegin  end
 -600 4361 a -858 4420 a Fg(Sec1)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361
a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361 a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial -600 4430 a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44
TeXcolorhsb @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Sec1)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361
a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430 a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35
b(Title)p 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb 382 4646
a
SDict begin H.R end
 382 4646 a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361
a -600 4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600 4361 a -306 w Fm(3)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600
4361 a -600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361
a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600
4361 a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.4) cvn /DEST pdfmark end
 -600 4361 a -600 4361
a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Slide)72 b(Title)-600 4361 y
tx@Dict begin  PutEnd  end
 -600
4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361 a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial -600 4430 a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Sec1)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361 a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430
a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)35 b(Title)p 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb 382 4503
a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573 a -600 4715 a
SDict begin H.S end
 -600 4715
a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(4)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -600 4361 a 0.08026 0.61365 0.44
TeXcolorhsb -600 4361 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4361 a 0.08026 0.61365 0.44
TeXcolorhsb 126 x Ff(n)p 0.08026 0.61365 0.44 TeXcolorhsb
182 w Fk(This)60 b(is)h(an)g(item)p 0.08026 0.61365 0.44
TeXcolorhsb 898 4487 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 898 4487 a 0.08026 0.61365 0.44
TeXcolorhsb -600 4713 a Ff(n)p 0.08026 0.61365 0.44 TeXcolorhsb
182 w Fk(Second)f(item)p 0.08026 0.61365 0.44 TeXcolorhsb
693 4713 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 693 4713 a 0.08026 0.61365 0.44 TeXcolorhsb
-600 4939 a Ff(n)p 0.08026 0.61365 0.44 TeXcolorhsb 182
w Fk(Third)g(item)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600
4361 a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.5) cvn /DEST pdfmark end
 -600 4361 a -600 4361
a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Slide)72 b(Title)-600 4361 y
tx@Dict begin  PutEnd  end
 -600
4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361 a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial -600 4430 a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Sec1)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361 a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430
a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35 b(Title)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(5)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a 126 x Fk(Y)-15 b(ou)61 b(can)f(see)g(a)h(list)g
(of)f(items)h(b)5 b(elo)-5 b(w.)2033 4487 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 2033 4487
a -600 4713 a Fk(There)60 b(a)-5 b(re)61 b(commands)g(to)f(mak)-5
b(e)61 b(them)g(app)5 b(ea)-5 b(r)61 b(sequentially)-600
4748 y
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a 0.08026 0.61365 0.44 TeXcolorhsb 0.75
TeXcolorgray 0.75 TeXcolorgray 274 x Ff(n)p 0.75 TeXcolorgray
182 w Fk(This)f(is)h(an)g(item)p 0.08026 0.61365 0.44
TeXcolorhsb 898 5022 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 898 5022 a 0.75 TeXcolorgray 0.75
TeXcolorgray -600 5247 a Ff(n)p 0.75 TeXcolorgray 182
w Fk(Second)f(item)p 0.08026 0.61365 0.44 TeXcolorhsb
693 5247 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 693 5247 a 0.75 TeXcolorgray 0.75 TeXcolorgray
-600 5473 a Ff(n)p 0.75 TeXcolorgray 182 w Fk(Third)g(item)p
0.08026 0.61365 0.44 TeXcolorhsb 0.75 TeXcolorgray 0.08026 0.61365 0.44
TeXcolorhsb 0.75 TeXcolorgray 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361
a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Slide)72
b(Title)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361
a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial -600 4430
a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb Fi(Sec1)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361
a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430 a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35
b(Title)p 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(5)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a 126 x Fk(Y)-15 b(ou)61 b(can)f(see)g(a)h(list)g
(of)f(items)h(b)5 b(elo)-5 b(w.)-600 4713 y(There)60
b(a)-5 b(re)61 b(commands)g(to)f(mak)-5 b(e)61 b(them)g(app)5
b(ea)-5 b(r)61 b(sequentially)-600 4748 y
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb -600 4748 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a 0.08026 0.61365 0.44
TeXcolorhsb 274 x Ff(n)p 0.08026 0.61365 0.44 TeXcolorhsb
182 w Fk(This)f(is)h(an)g(item)p 0.08026 0.61365 0.44
TeXcolorhsb 898 5022 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 898 5022 a 0.75 TeXcolorgray 0.75
TeXcolorgray -600 5247 a Ff(n)p 0.75 TeXcolorgray 182
w Fk(Second)f(item)p 0.08026 0.61365 0.44 TeXcolorhsb
693 5247 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 693 5247 a 0.75 TeXcolorgray 0.75 TeXcolorgray
-600 5473 a Ff(n)p 0.75 TeXcolorgray 182 w Fk(Third)g(item)p
0.08026 0.61365 0.44 TeXcolorhsb 0.75 TeXcolorgray 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Slide)72
b(Title)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361
a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial -600 4430
a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb Fi(Sec1)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361
a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430 a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35
b(Title)p 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(5)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a 126 x Fk(Y)-15 b(ou)61 b(can)f(see)g(a)h(list)g
(of)f(items)h(b)5 b(elo)-5 b(w.)-600 4713 y(There)60
b(a)-5 b(re)61 b(commands)g(to)f(mak)-5 b(e)61 b(them)g(app)5
b(ea)-5 b(r)61 b(sequentially)-600 4748 y
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb -600 4748 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a 0.75 TeXcolorgray
0.75 TeXcolorgray 274 x Ff(n)p 0.75 TeXcolorgray 182
w Fk(This)f(is)h(an)g(item)p 0.08026 0.61365 0.44 TeXcolorhsb
898 5022 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 898 5022 a 0.08026 0.61365 0.44 TeXcolorhsb
-600 5247 a Ff(n)p 0.08026 0.61365 0.44 TeXcolorhsb 182
w Fk(Second)f(item)p 0.08026 0.61365 0.44 TeXcolorhsb
693 5247 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 693 5247 a 0.75 TeXcolorgray 0.75 TeXcolorgray
-600 5473 a Ff(n)p 0.75 TeXcolorgray 182 w Fk(Third)g(item)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 0.75 TeXcolorgray 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 x Fl(Slide)72
b(Title)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361
a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial -600 4430
a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb Fi(Sec1)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361
a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430 a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35
b(Title)p 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(5)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a 126 x Fk(Y)-15 b(ou)61 b(can)f(see)g(a)h(list)g
(of)f(items)h(b)5 b(elo)-5 b(w.)-600 4713 y(There)60
b(a)-5 b(re)61 b(commands)g(to)f(mak)-5 b(e)61 b(them)g(app)5
b(ea)-5 b(r)61 b(sequentially)-600 4748 y
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb -600 4748 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4748 a 0.75 TeXcolorgray
0.75 TeXcolorgray 274 x Ff(n)p 0.75 TeXcolorgray 182
w Fk(This)f(is)h(an)g(item)p 0.08026 0.61365 0.44 TeXcolorhsb
898 5022 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 898 5022 a 0.75 TeXcolorgray 0.75 TeXcolorgray
-600 5247 a Ff(n)p 0.75 TeXcolorgray 182 w Fk(Second)f(item)p
0.08026 0.61365 0.44 TeXcolorhsb 693 5247 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 693 5247
a 0.08026 0.61365 0.44 TeXcolorhsb -600 5473 a Ff(n)p
0.08026 0.61365 0.44 TeXcolorhsb 182 w Fk(Third)g(item)p
0.75 TeXcolorgray 0.08026 0.61365 0.44 TeXcolorhsb 0.75
TeXcolorgray 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop 0.08026 0.61365 0.44
TeXcolorhsb 600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb -600 4178
a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -600 4178 a -600 4178 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -600 4178 a 183 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.0625 0.08163 0.98  sethsbcolor   0. true 0.0 298.75394 422.52342
268.87671 .5 Frame  gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.06863 0.18478 0.92  sethsbcolor   0. true 0.0 0.0 422.52342
29.87721 .5 Frame  gsave 0.06863 0.18478 0.92  sethsbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-600 4361 a
tx@Dict begin { 0.0 298.75394 } PutCoor PutBegin  end
 -600 4361 a 0 TeXcolorgray 496 x @beginspecial
70 @llx 40 @lly 592 @urx 264 @ury 715 @rwi 297 @rhi @clip
@setspecial
%%BeginDocument: powerdot-default.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: jpeg2ps V1.8 by Thomas Merz
%%Title: flower.jpg
%%CreationDate: Thu Sep 04 15:25:36 2003
%%BoundingBox: 20 20 592 284
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%EndProlog
%%Page: 1 1
/languagelevel where {pop languagelevel 2 lt}{true} ifelse {
  (JPEG file 'flower.jpg' needs PostScript Level 2!\n) dup print flush
  /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCII85Decode filter def
/Data RawData << >> /DCTDecode filter def
20 20 translate
572.00 264.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 130
     /Height 60
     /ImageMatrix [ 130 0 0 -60 0 60 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
  >> image
  Data closefile
  RawData flushfile
  showpage
  restore
} exec
s4IA0!"_al8O`[\!WW42!+Z'0s6K^t7!3!TGlRjF"98E%49,B]mJm__A8bpg!+`k
F!!!'"gAlm,"p>&3"U##5"U58;"U58@#R1J=$Od@L$OR4L&.AsU$k*OU$k<dZ%h9
!]',2,o'-%r1)]TqA+!2RH+!2RH!=&i7%1E[_&.fZs'bM0!+!2RH+!2RH+!2RH+!
2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+90+V&I8A!!.k:R&HDkE!
<Wo7s24o6!!!*%!<E3%!<<*"z!!EH0!s\l-#QXr+!WrH(!<<*"z!!!!$"T\Z-!!W
Z>!!*-(!sAf5#6P)2z!<N?'&J>3i0a0iV'F%ECEM4R3JWWi>,8CHg_9kS*;\nkSU
>bX*1h2^q&HDh7!!EE,":553z!!*'3!WsT#&d1Kt'*[l6EIjf-16JiXdIBOJ1DJf
B,S^O`g&MN`!<<05!tbMt!:(f:P\/(]CAkV"H=Pldo3Re8T<1>XN3Z:X6s;cH_#n
are&,T53dks\9SG$Zl5G#oW3*g6DlV0*;Q"Dmm:LhSB?`Xim1@:M<4\dbIWfbJ8[
Z2Wb>WrU:KT\H0AcE]4Cdt2ZEZ&_ci]542OhlYL#G%QbasVUdYZCKE>TE4bne-\m
o0'UR7FhZnKC`hAN((=`[JX\Ten:'QLe_S->qt>/VIqq];k^sGN?=?(11jG?2L/4
W7kH4<'jZ3L0Lm6iA:*rD6ADd1-F5had59Rc$&74PFHU_$:WdN'UKH*;PJgW&?0f
L:kQ:F,7Va,q.+si!:`leK2B7)fp8+*T@=0e&dDf[;K3cF-6H85!(k<V;;A5P!2k
"/F&pmB[NXKBdqnEens<43[%4Rr#sBEJ*q),%62\W!EZ>e7N.Tqie]#_n[a2d+dl
ruE!Sd#6LZ44/YXl/2A\3%\P>][-6=c[dh+lVDWHFf!bIX"@l>A5*6TLtMg"R:WG
?mM0RZB=#r(bku*a2ujo88Mn2@QtXHjWN!@/g4/af(4*CF-4M4GkSZBi(0OE?K='
"U+B8R1;)?rPnF#Lbq]]?!IL^g//JLP4DE1gZjBIGpu=m/Mbo;_P+SK6AF.G9u\Y
g7I'_EUSk&mT,U]UN5oTck)I;1%!,B#1.H;f5<l&1\QYespm>DRc;6+]C).$r8tB
En'kOLgG:MBN[b^oB<atPrfmQ-m;U_qJ?kbDN)d_F3N/<3][&T96JPaqo6`t3@.5
/.$5'C:"X2(,u@gII"*ASIa`FcR;",a[ue(V?^Lj!N>#mDeVHmo[4@in*LWeQEe?
#J_dSJrLX*D<ouTp>^u\?emhGa)2f+PJfj"?>3]=;74hrrA:k'ffd%lP@c1G_NFT
pQVXJ>"Vh]*#/1QT%G$k2HTF98hGt+dt]f`,1&'dH+1/gjXs36d-QA<;Zh3=\3Y(
P'W%b-6c)O'5C>,r?KZ?FZhf"aXgE]]aX1E\>(K=MHR6LjI#/tl:3!"S+cORqR\A
1*?GfR(cCjBMj#WHU#G=EL\$E@!J7,4;7s0K1),:8_?m@49i`,/Er5RdQou4Kc8f
HG^[\)b4ZdOO>pVEb$\Y0/NNCfN<>]:1,VQTG,V+L5UbA-EN`h^qV9HNsJ81A,&g
0u$Z2P<gkpCKmN7VeNjf/?^o8IBB^J^Q%:&Z-=3qPeTpW>$OtRpPB2:kggek.%?2
@CN^cAS=V%LrD!RE]l,V!,#hsGqAPQl&7!WFR-%N<H!9.<4IWRC;mi$RR2mCOdM9
R2-Ko@`KcrhL-`2'`/-!N?ho%,m&>XrK^Q]Z-j]B7.R8q=Q6">`@RQD(F8)M3f]N
_OT$I6ZKh*?-pdCoiB9-l(7c'5-=j:u*WkVB<40-2mg4]nr<#6QJC6;_V_Q%W5b6
[_ZI@)>V-69dM1-[KcGuFI=h)A9_F_e\FbU't4.[,m43!=m;m@Y(f6tj;B]FIYkh
<:?Y>d0H"+.Fp]eUEUcZ?Gu+o_7fH<I4>%46IBIe_s-B2,8DkZ&bID+O^%7.4dT,
-.7m7ZI>$74c*\&Og)9/dbVe;^eMih&i/*[8F-BnoQ??A))SL6&:qmX<H#%7EX-+
g8/MJ"7'fGt5V#mg9jPU>0/Y8.e^*Tcrr?;$a$4n2PE*(@"i9EJ2Y?'N#U#o0Dd%
71(P.mfEI^fi1CE';%:$UInL@hLSAZq2>?B)V9f773#Sa<IR1Pk7To*5I[2N(I(A
:fpLJX73U^4U\397W7LG<g]Lpkn*Oh6]#X;V*2_gS.sZkdjcPQ>%/fP(1PVKmU8,
3IZ0LT[.M6CTG-*R\2c-qQ3EOcNU=N<+"I&mt1jk`ssINg2nFk2OpG.[`q#,Yg[*
cD)S)(r0:r5&!^[32`2lU<.Wel=P'6+Hb:b'TF7=WSVmr&A<Et?G!">,dDDBrL2d
q;"dK63LFYZEWWHLCIL-q+LA(TVk68^m4$V)\VB'%G76+4Xd`,(>/0WT?'9p=c0h
YH0D8;ld2piiDAIbA!@\(A'#?"7@F6-'E5kNr9+4dB`fAU?e@/'''e@4Ve>WTh-D
5PE@<A\1Q5HM]="t\\f(OE$WbG'k,;hGIQ2XXP<mGJmPY,kr5bol-a:&;q#hLBH]
lA5pf_*40ATK7'l)@-I!SK-?E;Wsd/B\c4gSE(e>)uN'G6%g[4I(Sc7e&CZ,n;LK
gj^03#"laJpqCCQ7OYihZP3&NNKd1G.g`C/kC%1liOW#APUGo3@G@eBKeA%gk:UO
h)BVjCkQr>=K#_</)26_BSR5@Y(Zr2s.l')oV&3i61l_i>O]2+*V1.S]>INQCDlP
+mB/pMf3)H>>D,AN"^f5;*a^Ma@>uFk_ZL^UVnP62Y,2pBcKe0;9KeLRQ#7iZO."
N?lpZ9H9,bj7TVp[:&+!<A>>q)tl(s-=A#>2DPm[c`O8Q@40LLA,Oekq%B;.C>4C
NcNs9UV;[e[@3Xo9(d89=t/O.j<&A;GQGZ)5q+tc7s<[Ou,Hb.?`ERdY62I4GM9i
[$o@;Q"Hg;T+E\3FE$9/Dn!S6,[/rS6BG$;QrLp%!%@)*o1*-^G(#S.,\!4bZLtb
<Ti'O$k?5@=mgs5Y!S&>/)kkAcdXcn7=VIpjp93n:_fg8.@2&gT*L_I=4V]'C60#
M=\-QTAfqA.?Y<YYIJotU(Q4%,Yl"QU<YrJhW<"MUj/"IVnb+-AJK=bf"[BXWZh"
qa7TQY6'Y<Rj6$D`mrWQY3lU'^ETZ,Bo1_HX%(fd)h6pHe$!DQ`qqfQ/MO@-4+Bk
F6pl[qKmN'2<q+6Ipn5BIuR_?<W1hq[@c\gT]NPCUQUrq?B5u^3+tE3_uPeqQ?L<
e/$(3j0!@g/LX4(["9\p5Qe;uLu!Io_!-&Z:Qed=8jW#R(J)6q>q47_/N8r5P(nO
.L4CaK6d1su\`=nTi*iR3^KLH>A.G#M@;DiF-K,8>8Qo(p5s[7TD'<H2iWTNojX=
,>-)Va\HdmifAE)?G@Co^+'VpLO8t\pO.KNGaP>,7+*/'9`Gi4W$b/N\eT=ITr(@
J'Y[4+hu,g[6hm,C85B*0C;,S8a3b%\iJ#bF2c]h630i_lEu:rf:QL`A0D_.7=Bm
FY,_21q>u!W-7[gW)0f$IE)CY,ZEp"=WE0M+;M?mY^4qaJ^iS[/U-eIe3R>njZn&
7"2$VUIjUP/gXXp?$Ma@"_VtHg0"KCM4[WAikYAhFl[92cO^^<#Q!*oeppg3MIVp
?X*K$].J=G6*k33!V^R7<&ZPS,Rb:]Q.7Ot$(_\QIirLLM:*j"2EfPVFRB>7*jc5
/eBp@*fFdZ#V6!rRlYI/OgU'.S.:o@_D.cD0[qN*os>f3^,938+oC*_sdELLI/I0
-u:N!I8DJlO=+Z-72hS?L&#4N29q`h\8PE:R%5(<Z[mW2<<Q7S3_sVf,U)?ZGKS)
Vui8LHi%ZNn,tLn/Qgr<o!SGEd!YE=>d(bmDHALPAR3S^!ec>#tg]onIcJ,%!dl`
]%l%#(_APEA]N/GW7TQ$`.qn=b#dBYXm7oHeoo5`i3pg0N04Me>H%`?W;-KA<`QF
GmpWZ!Y[grNkLoOB?>BS?P#sKQ?E\"9l\@jHgQ]8gEr@:L3n[5F2RDg'.0+I564l
noX/l&!o_J)"UGQoLLXM^`%GnLp?#rGhVe.L7d[NR?d"RW'2\f6[1'>VScBuT,X0
.RaX-Tku^QtGu.0i]Q1-3SD:t';ZC@eGS8/s^EP;MY3Xts8f=q$!m!3E8aCOXhX/
_hipL.[e+-*gF"nm*e$9<U25Tk[3=,rq,QY?Ydq`CMVI]$#oH76kBANl]Tc3gH!O
.Z:HP8uf<u/uVk`(WbF^-^NH]^Bg"*&RQ07\>F[qS=iu(<s]qGo==WOn+9@5e'd6
P7.Y?f4jV.)r465SFZQA-^8Q7[kWU(Q"^/UF:Kmbu*Vj4"Wcs[JeGR#,`dM`tGPb
B52@GPQ^jP+T)h#Wm<L#YGE3>Y<:-Fa)FKoIh[_4h"LVR8k^6&?p&,?St.%L;;4`
o:)q#%X7S:'r-L\Y4Oe]W^n`f1md:F-nO#E8X`IIf*UnF5;[lODZ7fdT:KeYf)^T
=<GB<KfTr_rq?I3,NkZ0;$a_WgE[!4;<9elKa-'!;/KVWW)s4^UoB!F7N2>`;X`$
npG'aXliDYR_,9-htDtU\l>!F(LZ;R3,@gDYD,ODg88V[d@>J'kjKQf=Vg.>l@e:
p(Pb]a!)e7aF.ZDFB;sFABpUDk>WOg-SeC:[<+b!ni.t>!CNh+<rr?Y5bLlQa%c-
[9Zdm*Z5jmd9,u7QAH]c#pN3gF*]0F:_(!HX1~>
%%EOF

%%EndDocument
 @endspecial 0.08026 0.61365 0.44 TeXcolorhsb -600 4361
a
tx@Dict begin  PutEnd  end
 -600 4361 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.87671 71.8282 29.87721 .5 Frame
 gsave 0.0625 0.08163 0.98  sethsbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
-600 4361 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4361 a -600 4361 a
SDict begin H.S end
 -600 4361 a -600
4361 a
SDict begin 13.6 H.A end
 -600 4361 a -600 4361 a
SDict begin [/View [/XYZ H.V]/Dest (slide.6) cvn /DEST pdfmark end
 -600 4361 a -600 4361
a
tx@Dict begin { 84.50339 277.83896 } PutCoor PutBegin  end
 -600 4361 a 1 0 0 TeXcolorrgb 1 x Fl(L)-563 4316 y
Fe(A)-498 4362 y Fl(T)-389 4407 y(E)-289 4362 y(X,)73
b Fd(i)58 4289 y Fc(2)192 4362 y Fb(=)55 b Fa(\000)p
Fb(1)p 0.08026 0.61365 0.44 TeXcolorhsb -600 4361 a
tx@Dict begin  PutEnd  end
 -600
4361 a -600 4361 a
tx@Dict begin { 6.33759 247.96631 } PutCoor PutBegin  end
 -600 4361 a 69 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.08026 0.61365 0.44  sethsbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 60.42311 -1.42271 -1.42271 -1.42271   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.5 SLW 0.08026 0.61365 0.44
 sethsbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial -600 4430 a
SDict begin H.S end
 -600 4430 a 0.08026 0.61365 0.44
TeXcolorhsb 0.08026 0.61365 0.44 TeXcolorhsb Fi(Sec1)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4361 a
SDict begin H.R end
 382 4361 a 382 4430 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 382 4430
a -600 4573 a
SDict begin H.S end
 -600 4573 a 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb Fi(Slide)35 b(Title)p
0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb 382 4503 a
SDict begin H.R end
 382 4503 a 382 4573 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 382 4573
a -600 4715 a
SDict begin H.S end
 -600 4715 a 0.08026 0.61365 0.44 TeXcolorhsb
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.08026 0.61365 0.44  sethsbcolor  0. true 1.42262 neg 1.42262
neg 60.57564 5.58928 .5 Frame  gsave 0.08026 0.61365 0.44  sethsbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 0.0625 0.08163 0.98
TeXcolorhsb Fi(Slide)g(Title)p 0.08026 0.61365 0.44 TeXcolorhsb
0.08026 0.61365 0.44 TeXcolorhsb 382 4646 a
SDict begin H.R end
 382 4646
a 382 4715 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.5) cvn H.B /ANN pdfmark end
 382 4715 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600
4361 a
tx@Dict begin { 12.67519 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361
a
tx@Dict begin { 211.2617 11.94815 } PutCoor PutBegin  end
 -600 4361 a -600 4361 a
tx@Dict begin  PutEnd  end
 -600 4361 a -600 4361 a
tx@Dict begin { 409.84822 11.94815 } PutCoor PutBegin  end
 -600
4361 a -306 w Fm(6)47 b(/)f(6)-600 4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a
-600 4361 a
tx@Dict begin { 84.50339 247.96631 } PutCoor PutBegin  end
 -600 4361 a 126 x Fk(My)61 b(slide)f(contents.)-600
4361 y
tx@Dict begin  PutEnd  end
 -600 4361 a 0.08026 0.61365 0.44 TeXcolorhsb 0.08026 0.61365 0.44
TeXcolorhsb eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
